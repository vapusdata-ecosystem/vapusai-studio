// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: protos/vapusai-studio/v1alpha1/aistudio.proto

package v1alpha1

import (
	v1alpha1 "github.com/vapusdata-ecosystem/apis/protos/models/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AIInterfaceMode int32

const (
	AIInterfaceMode_P2P       AIInterfaceMode = 0
	AIInterfaceMode_CHAT_MODE AIInterfaceMode = 1
)

// Enum value maps for AIInterfaceMode.
var (
	AIInterfaceMode_name = map[int32]string{
		0: "P2P",
		1: "CHAT_MODE",
	}
	AIInterfaceMode_value = map[string]int32{
		"P2P":       0,
		"CHAT_MODE": 1,
	}
)

func (x AIInterfaceMode) Enum() *AIInterfaceMode {
	p := new(AIInterfaceMode)
	*p = x
	return p
}

func (x AIInterfaceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIInterfaceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes[0].Descriptor()
}

func (AIInterfaceMode) Type() protoreflect.EnumType {
	return &file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes[0]
}

func (x AIInterfaceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIInterfaceMode.Descriptor instead.
func (AIInterfaceMode) EnumDescriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{0}
}

type AIMessageRoles int32

const (
	AIMessageRoles_USER       AIMessageRoles = 0
	AIMessageRoles_SYSTEM     AIMessageRoles = 1
	AIMessageRoles_ASSISTANT  AIMessageRoles = 2
	AIMessageRoles_TOOL       AIMessageRoles = 3
	AIMessageRoles_FUNCTION   AIMessageRoles = 4
	AIMessageRoles_VAPUSGUARD AIMessageRoles = 5
)

// Enum value maps for AIMessageRoles.
var (
	AIMessageRoles_name = map[int32]string{
		0: "USER",
		1: "SYSTEM",
		2: "ASSISTANT",
		3: "TOOL",
		4: "FUNCTION",
		5: "VAPUSGUARD",
	}
	AIMessageRoles_value = map[string]int32{
		"USER":       0,
		"SYSTEM":     1,
		"ASSISTANT":  2,
		"TOOL":       3,
		"FUNCTION":   4,
		"VAPUSGUARD": 5,
	}
)

func (x AIMessageRoles) Enum() *AIMessageRoles {
	p := new(AIMessageRoles)
	*p = x
	return p
}

func (x AIMessageRoles) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIMessageRoles) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes[1].Descriptor()
}

func (AIMessageRoles) Type() protoreflect.EnumType {
	return &file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes[1]
}

func (x AIMessageRoles) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIMessageRoles.Descriptor instead.
func (AIMessageRoles) EnumDescriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{1}
}

type AIMessageTypes int32

const (
	AIMessageTypes_TEXT        AIMessageTypes = 0
	AIMessageTypes_IMAGE_URL   AIMessageTypes = 1
	AIMessageTypes_INPUT_AUDIO AIMessageTypes = 2
)

// Enum value maps for AIMessageTypes.
var (
	AIMessageTypes_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE_URL",
		2: "INPUT_AUDIO",
	}
	AIMessageTypes_value = map[string]int32{
		"TEXT":        0,
		"IMAGE_URL":   1,
		"INPUT_AUDIO": 2,
	}
)

func (x AIMessageTypes) Enum() *AIMessageTypes {
	p := new(AIMessageTypes)
	*p = x
	return p
}

func (x AIMessageTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIMessageTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes[2].Descriptor()
}

func (AIMessageTypes) Type() protoreflect.EnumType {
	return &file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes[2]
}

func (x AIMessageTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIMessageTypes.Descriptor instead.
func (AIMessageTypes) EnumDescriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{2}
}

type ChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages        []*ChatMessageObject     `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`                                         // @gotags: yaml:"messages"
	Contexts        []*v1alpha1.Mapper       `protobuf:"bytes,2,rep,name=contexts,proto3" json:"contexts,omitempty"`                                         // @gotags: yaml:"contexts"
	Temperature     float32                  `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`                                 // @gotags: yaml:"temperature"
	Mode            AIInterfaceMode          `protobuf:"varint,4,opt,name=mode,proto3,enum=vapusai.v1alpha1.AIInterfaceMode" json:"mode,omitempty"`          // @gotags: yaml:"maxOutputTokens"
	ModelNodeId     string                   `protobuf:"bytes,5,opt,name=model_node_id,json=modelNodeId,proto3" json:"model_node_id,omitempty"`              // @gotags: yaml:"modelNodeId"
	Model           string                   `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`                                               // @gotags: yaml:"model"
	PromptId        string                   `protobuf:"bytes,7,opt,name=prompt_id,json=promptId,proto3" json:"prompt_id,omitempty"`                         // @gotags: yaml:"promptId"
	MaxOutputTokens int32                    `protobuf:"varint,8,opt,name=max_output_tokens,json=maxOutputTokens,proto3" json:"max_output_tokens,omitempty"` // @gotags: yaml:"maxOutputTokens"
	TopP            float64                  `protobuf:"fixed64,9,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`                                   // @gotags: yaml:"topP"
	TopK            float64                  `protobuf:"fixed64,10,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`                                  // @gotags: yaml:"topK"
	ResponseFormat  *v1alpha1.ResponseFormat `protobuf:"bytes,11,opt,name=response_format,json=responseFormat,proto3" json:"response_format,omitempty"`      // @gotags: yaml:"responseFormat"
	Tools           []*v1alpha1.ToolCall     `protobuf:"bytes,12,rep,name=tools,proto3" json:"tools,omitempty"`                                              // @gotags: yaml:"toolCalls"
	ToolName        string                   `protobuf:"bytes,13,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`                        // @gotags: yaml:"toolName"
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{0}
}

func (x *ChatRequest) GetMessages() []*ChatMessageObject {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatRequest) GetContexts() []*v1alpha1.Mapper {
	if x != nil {
		return x.Contexts
	}
	return nil
}

func (x *ChatRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ChatRequest) GetMode() AIInterfaceMode {
	if x != nil {
		return x.Mode
	}
	return AIInterfaceMode_P2P
}

func (x *ChatRequest) GetModelNodeId() string {
	if x != nil {
		return x.ModelNodeId
	}
	return ""
}

func (x *ChatRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatRequest) GetPromptId() string {
	if x != nil {
		return x.PromptId
	}
	return ""
}

func (x *ChatRequest) GetMaxOutputTokens() int32 {
	if x != nil {
		return x.MaxOutputTokens
	}
	return 0
}

func (x *ChatRequest) GetTopP() float64 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ChatRequest) GetTopK() float64 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *ChatRequest) GetResponseFormat() *v1alpha1.ResponseFormat {
	if x != nil {
		return x.ResponseFormat
	}
	return nil
}

func (x *ChatRequest) GetTools() []*v1alpha1.ToolCall {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *ChatRequest) GetToolName() string {
	if x != nil {
		return x.ToolName
	}
	return ""
}

type ChatMessageObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role         AIMessageRoles        `protobuf:"varint,1,opt,name=role,proto3,enum=vapusai.v1alpha1.AIMessageRoles" json:"role,omitempty"` // @gotags: yaml:"role"
	Content      string                `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                                 // @gotags: yaml:"content"
	ContentParts []*RequestContentPart `protobuf:"bytes,3,rep,name=content_parts,json=contentParts,proto3" json:"content_parts,omitempty"`   // @gotags: yaml:"contentParts"
	ToolCalls    []*v1alpha1.ToolCall  `protobuf:"bytes,4,rep,name=tool_calls,json=toolCalls,proto3" json:"tool_calls,omitempty"`            // @gotags: yaml:"toolCalls"
}

func (x *ChatMessageObject) Reset() {
	*x = ChatMessageObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageObject) ProtoMessage() {}

func (x *ChatMessageObject) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageObject.ProtoReflect.Descriptor instead.
func (*ChatMessageObject) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessageObject) GetRole() AIMessageRoles {
	if x != nil {
		return x.Role
	}
	return AIMessageRoles_USER
}

func (x *ChatMessageObject) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessageObject) GetContentParts() []*RequestContentPart {
	if x != nil {
		return x.ContentParts
	}
	return nil
}

func (x *ChatMessageObject) GetToolCalls() []*v1alpha1.ToolCall {
	if x != nil {
		return x.ToolCalls
	}
	return nil
}

type EmbeddingsInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelNodeId string `protobuf:"bytes,1,opt,name=model_node_id,json=modelNodeId,proto3" json:"model_node_id,omitempty"` // @gotags: yaml:"modelNodeId"
	AiModel     string `protobuf:"bytes,2,opt,name=ai_model,json=aiModel,proto3" json:"ai_model,omitempty"`               // @gotags: yaml:"aiModel"
	Dimension   int64  `protobuf:"varint,3,opt,name=dimension,proto3" json:"dimension,omitempty"`                         // @gotags: yaml:"dimension"
	InputText   string `protobuf:"bytes,4,opt,name=input_text,json=inputText,proto3" json:"input_text,omitempty"`         // @gotags: yaml:"inputText"
}

func (x *EmbeddingsInterface) Reset() {
	*x = EmbeddingsInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingsInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingsInterface) ProtoMessage() {}

func (x *EmbeddingsInterface) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingsInterface.ProtoReflect.Descriptor instead.
func (*EmbeddingsInterface) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{2}
}

func (x *EmbeddingsInterface) GetModelNodeId() string {
	if x != nil {
		return x.ModelNodeId
	}
	return ""
}

func (x *EmbeddingsInterface) GetAiModel() string {
	if x != nil {
		return x.AiModel
	}
	return ""
}

func (x *EmbeddingsInterface) GetDimension() int64 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *EmbeddingsInterface) GetInputText() string {
	if x != nil {
		return x.InputText
	}
	return ""
}

type EmbeddingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output *v1alpha1.Embeddings `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"` // @gotags: yaml:"output"
}

func (x *EmbeddingsResponse) Reset() {
	*x = EmbeddingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingsResponse) ProtoMessage() {}

func (x *EmbeddingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingsResponse.ProtoReflect.Descriptor instead.
func (*EmbeddingsResponse) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{3}
}

func (x *EmbeddingsResponse) GetOutput() *v1alpha1.Embeddings {
	if x != nil {
		return x.Output
	}
	return nil
}

type StreamChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output *ChatResponse `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"` // @gotags: yaml:"output"
}

func (x *StreamChatResponse) Reset() {
	*x = StreamChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamChatResponse) ProtoMessage() {}

func (x *StreamChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamChatResponse.ProtoReflect.Descriptor instead.
func (*StreamChatResponse) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{4}
}

func (x *StreamChatResponse) GetOutput() *ChatResponse {
	if x != nil {
		return x.Output
	}
	return nil
}

type ChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created int64                 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"` // @gotags: yaml:"created"
	Model   string                `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`      // @gotags: yaml:"model"
	Object  string                `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`    // @gotags: yaml:"object"
	Choices []*ChatResponseChoice `protobuf:"bytes,4,rep,name=choices,proto3" json:"choices,omitempty"`  // @gotags: yaml:"choices"
	Usage   []*structpb.Struct    `protobuf:"bytes,5,rep,name=usage,proto3" json:"usage,omitempty"`      // @gotags: yaml:"usage"
	Event   string                `protobuf:"bytes,6,opt,name=event,proto3" json:"event,omitempty"`      // @gotags: yaml:"event"
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{5}
}

func (x *ChatResponse) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ChatResponse) GetChoices() []*ChatResponseChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ChatResponse) GetUsage() []*structpb.Struct {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *ChatResponse) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

type RequestContentPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       AIMessageTypes `protobuf:"varint,1,opt,name=type,proto3,enum=vapusai.v1alpha1.AIMessageTypes" json:"type,omitempty"` // @gotags: yaml:"type"
	Text       string         `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                                       // @gotags: yaml:"text"
	ImageUrl   string         `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`               // @gotags: yaml:"imageUrl"
	InputAudio string         `protobuf:"bytes,4,opt,name=input_audio,json=inputAudio,proto3" json:"input_audio,omitempty"`         // @gotags: yaml:"inputAudio"
}

func (x *RequestContentPart) Reset() {
	*x = RequestContentPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestContentPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestContentPart) ProtoMessage() {}

func (x *RequestContentPart) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestContentPart.ProtoReflect.Descriptor instead.
func (*RequestContentPart) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{6}
}

func (x *RequestContentPart) GetType() AIMessageTypes {
	if x != nil {
		return x.Type
	}
	return AIMessageTypes_TEXT
}

func (x *RequestContentPart) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RequestContentPart) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *RequestContentPart) GetInputAudio() string {
	if x != nil {
		return x.InputAudio
	}
	return ""
}

type ChatResponseChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages     *ChatMessageObject `protobuf:"bytes,1,opt,name=messages,proto3" json:"messages,omitempty"`                             // @gotags: yaml:"messages"
	FinishReason string             `protobuf:"bytes,2,opt,name=finish_reason,json=finishReason,proto3" json:"finish_reason,omitempty"` // @gotags: yaml:"finishReason"
	Index        int64              `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`                                  // @gotags: yaml:"index"
}

func (x *ChatResponseChoice) Reset() {
	*x = ChatResponseChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatResponseChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponseChoice) ProtoMessage() {}

func (x *ChatResponseChoice) ProtoReflect() protoreflect.Message {
	mi := &file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponseChoice.ProtoReflect.Descriptor instead.
func (*ChatResponseChoice) Descriptor() ([]byte, []int) {
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP(), []int{7}
}

func (x *ChatResponseChoice) GetMessages() *ChatMessageObject {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatResponseChoice) GetFinishReason() string {
	if x != nil {
		return x.FinishReason
	}
	return ""
}

func (x *ChatResponseChoice) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

var File_protos_vapusai_studio_v1alpha1_aistudio_proto protoreflect.FileDescriptor

var file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69,
	0x2d, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x61, 0x69, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x04, 0x0a, 0x0b, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x61, 0x70,
	0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x35, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x49, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f,
	0x70, 0x5f, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x74, 0x6f, 0x70, 0x4b, 0x12, 0x48, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2f,
	0x0a, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe8, 0x01, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x61, 0x70, 0x75,
	0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x09, 0x74, 0x6f,
	0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0x49, 0x0a, 0x12, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4c, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76,
	0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3e, 0x0a,
	0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x49, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x61, 0x70,
	0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2a, 0x29, 0x0a, 0x0f, 0x41, 0x49, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x32, 0x50, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x2a,
	0x5d, 0x0a, 0x0e, 0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53, 0x53, 0x49, 0x53,
	0x54, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x4f, 0x4c, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x56, 0x41, 0x50, 0x55, 0x53, 0x47, 0x55, 0x41, 0x52, 0x44, 0x10, 0x05, 0x2a, 0x3a,
	0x0a, 0x0e, 0x41, 0x49, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x02, 0x32, 0xf3, 0x02, 0x0a, 0x0d, 0x41,
	0x49, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x86, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x25, 0x2e, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x24, 0x2e, 0x76, 0x61, 0x70,
	0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x64, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1d, 0x2e,
	0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76,
	0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x12, 0x73, 0x0a, 0x0a, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x76, 0x61, 0x70, 0x75,
	0x73, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x61, 0x70, 0x75, 0x73,
	0x61, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x30, 0x01,
	0x42, 0xc3, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0d, 0x41, 0x69, 0x73, 0x74, 0x75,
	0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x64, 0x61, 0x74, 0x61,
	0x2d, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x10,
	0x56, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xca, 0x02, 0x10, 0x56, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xe2, 0x02, 0x1c, 0x56, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x5c, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x11, 0x56, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x3a, 0x3a, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescOnce sync.Once
	file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescData = file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDesc
)

func file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescGZIP() []byte {
	file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescOnce.Do(func() {
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescData)
	})
	return file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDescData
}

var file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_vapusai_studio_v1alpha1_aistudio_proto_goTypes = []any{
	(AIInterfaceMode)(0),            // 0: vapusai.v1alpha1.AIInterfaceMode
	(AIMessageRoles)(0),             // 1: vapusai.v1alpha1.AIMessageRoles
	(AIMessageTypes)(0),             // 2: vapusai.v1alpha1.AIMessageTypes
	(*ChatRequest)(nil),             // 3: vapusai.v1alpha1.ChatRequest
	(*ChatMessageObject)(nil),       // 4: vapusai.v1alpha1.ChatMessageObject
	(*EmbeddingsInterface)(nil),     // 5: vapusai.v1alpha1.EmbeddingsInterface
	(*EmbeddingsResponse)(nil),      // 6: vapusai.v1alpha1.EmbeddingsResponse
	(*StreamChatResponse)(nil),      // 7: vapusai.v1alpha1.StreamChatResponse
	(*ChatResponse)(nil),            // 8: vapusai.v1alpha1.ChatResponse
	(*RequestContentPart)(nil),      // 9: vapusai.v1alpha1.RequestContentPart
	(*ChatResponseChoice)(nil),      // 10: vapusai.v1alpha1.ChatResponseChoice
	(*v1alpha1.Mapper)(nil),         // 11: models.v1alpha1.Mapper
	(*v1alpha1.ResponseFormat)(nil), // 12: models.v1alpha1.ResponseFormat
	(*v1alpha1.ToolCall)(nil),       // 13: models.v1alpha1.ToolCall
	(*v1alpha1.Embeddings)(nil),     // 14: models.v1alpha1.Embeddings
	(*structpb.Struct)(nil),         // 15: google.protobuf.Struct
}
var file_protos_vapusai_studio_v1alpha1_aistudio_proto_depIdxs = []int32{
	4,  // 0: vapusai.v1alpha1.ChatRequest.messages:type_name -> vapusai.v1alpha1.ChatMessageObject
	11, // 1: vapusai.v1alpha1.ChatRequest.contexts:type_name -> models.v1alpha1.Mapper
	0,  // 2: vapusai.v1alpha1.ChatRequest.mode:type_name -> vapusai.v1alpha1.AIInterfaceMode
	12, // 3: vapusai.v1alpha1.ChatRequest.response_format:type_name -> models.v1alpha1.ResponseFormat
	13, // 4: vapusai.v1alpha1.ChatRequest.tools:type_name -> models.v1alpha1.ToolCall
	1,  // 5: vapusai.v1alpha1.ChatMessageObject.role:type_name -> vapusai.v1alpha1.AIMessageRoles
	9,  // 6: vapusai.v1alpha1.ChatMessageObject.content_parts:type_name -> vapusai.v1alpha1.RequestContentPart
	13, // 7: vapusai.v1alpha1.ChatMessageObject.tool_calls:type_name -> models.v1alpha1.ToolCall
	14, // 8: vapusai.v1alpha1.EmbeddingsResponse.output:type_name -> models.v1alpha1.Embeddings
	8,  // 9: vapusai.v1alpha1.StreamChatResponse.output:type_name -> vapusai.v1alpha1.ChatResponse
	10, // 10: vapusai.v1alpha1.ChatResponse.choices:type_name -> vapusai.v1alpha1.ChatResponseChoice
	15, // 11: vapusai.v1alpha1.ChatResponse.usage:type_name -> google.protobuf.Struct
	2,  // 12: vapusai.v1alpha1.RequestContentPart.type:type_name -> vapusai.v1alpha1.AIMessageTypes
	4,  // 13: vapusai.v1alpha1.ChatResponseChoice.messages:type_name -> vapusai.v1alpha1.ChatMessageObject
	5,  // 14: vapusai.v1alpha1.AIModelStudio.GenerateEmbeddings:input_type -> vapusai.v1alpha1.EmbeddingsInterface
	3,  // 15: vapusai.v1alpha1.AIModelStudio.Chat:input_type -> vapusai.v1alpha1.ChatRequest
	3,  // 16: vapusai.v1alpha1.AIModelStudio.ChatStream:input_type -> vapusai.v1alpha1.ChatRequest
	6,  // 17: vapusai.v1alpha1.AIModelStudio.GenerateEmbeddings:output_type -> vapusai.v1alpha1.EmbeddingsResponse
	8,  // 18: vapusai.v1alpha1.AIModelStudio.Chat:output_type -> vapusai.v1alpha1.ChatResponse
	8,  // 19: vapusai.v1alpha1.AIModelStudio.ChatStream:output_type -> vapusai.v1alpha1.ChatResponse
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_protos_vapusai_studio_v1alpha1_aistudio_proto_init() }
func file_protos_vapusai_studio_v1alpha1_aistudio_proto_init() {
	if File_protos_vapusai_studio_v1alpha1_aistudio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChatMessageObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EmbeddingsInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EmbeddingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StreamChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RequestContentPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ChatResponseChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_vapusai_studio_v1alpha1_aistudio_proto_goTypes,
		DependencyIndexes: file_protos_vapusai_studio_v1alpha1_aistudio_proto_depIdxs,
		EnumInfos:         file_protos_vapusai_studio_v1alpha1_aistudio_proto_enumTypes,
		MessageInfos:      file_protos_vapusai_studio_v1alpha1_aistudio_proto_msgTypes,
	}.Build()
	File_protos_vapusai_studio_v1alpha1_aistudio_proto = out.File
	file_protos_vapusai_studio_v1alpha1_aistudio_proto_rawDesc = nil
	file_protos_vapusai_studio_v1alpha1_aistudio_proto_goTypes = nil
	file_protos_vapusai_studio_v1alpha1_aistudio_proto_depIdxs = nil
}
