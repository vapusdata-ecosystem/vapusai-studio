//*
// @fileoverview
// This file contains the protocol buffer definitions for the datamarketplace models.
// It defines various enums and messages related to account, datamarketplace, credentials, and authentication.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: protos/models/v1alpha1/organizations.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Message representing an account.
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                    // @gotags: yaml:"name"
	AccountId            string           `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`                                         // @gotags: yaml:"accountId"
	Status               string           `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                                                // @gotags: yaml:"status"
	AuthnMethod          AuthnMethod      `protobuf:"varint,4,opt,name=authn_method,json=authnMethod,proto3,enum=models.v1alpha1.AuthnMethod" json:"authn_method,omitempty"` // @gotags: yaml:"authnMethod"
	DmAccessJwtKeys      *JWTParams       `protobuf:"bytes,5,opt,name=dm_access_jwt_keys,json=dmAccessJwtKeys,proto3" json:"dm_access_jwt_keys,omitempty"`                   // @gotags: yaml:"dmAccessJWTKeys"
	BackendSecretStorage *BackendStorages `protobuf:"bytes,6,opt,name=backend_secret_storage,json=backendSecretStorage,proto3" json:"backend_secret_storage,omitempty"`      // @gotags: yaml:"backendSecretStorage"
	BackendDataStorage   *BackendStorages `protobuf:"bytes,7,opt,name=backend_data_storage,json=backendDataStorage,proto3" json:"backend_data_storage,omitempty"`            // @gotags: yaml:"backendDataStorage"
	OidcParams           *AuthnOIDC       `protobuf:"bytes,8,opt,name=oidc_params,json=oidcParams,proto3" json:"oidc_params,omitempty"`                                      // @gotags: yaml:"oidcParams"
	Profile              *AccountProfile  `protobuf:"bytes,9,opt,name=profile,proto3" json:"profile,omitempty"`                                                              // @gotags: yaml:"profile"
	AiAttributes         *AIAttributes    `protobuf:"bytes,10,opt,name=ai_attributes,json=aiAttributes,proto3" json:"ai_attributes,omitempty"`                               // @gotags: yaml:"aiAttributes"
	Settings             *AccountSettings `protobuf:"bytes,11,opt,name=settings,proto3" json:"settings,omitempty"`                                                           // @gotags: yaml:"settings"
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Account) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Account) GetAuthnMethod() AuthnMethod {
	if x != nil {
		return x.AuthnMethod
	}
	return AuthnMethod_AM_INVALID
}

func (x *Account) GetDmAccessJwtKeys() *JWTParams {
	if x != nil {
		return x.DmAccessJwtKeys
	}
	return nil
}

func (x *Account) GetBackendSecretStorage() *BackendStorages {
	if x != nil {
		return x.BackendSecretStorage
	}
	return nil
}

func (x *Account) GetBackendDataStorage() *BackendStorages {
	if x != nil {
		return x.BackendDataStorage
	}
	return nil
}

func (x *Account) GetOidcParams() *AuthnOIDC {
	if x != nil {
		return x.OidcParams
	}
	return nil
}

func (x *Account) GetProfile() *AccountProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Account) GetAiAttributes() *AIAttributes {
	if x != nil {
		return x.AiAttributes
	}
	return nil
}

func (x *Account) GetSettings() *AccountSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AIAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmbeddingModelNode  string `protobuf:"bytes,1,opt,name=embedding_model_node,json=embeddingModelNode,proto3" json:"embedding_model_node,omitempty"`    // @gotags: yaml:"embeddingModelNode"
	EmbeddingModel      string `protobuf:"bytes,2,opt,name=embedding_model,json=embeddingModel,proto3" json:"embedding_model,omitempty"`                  // @gotags: yaml:"embeddingModel"
	GenerativeModelNode string `protobuf:"bytes,3,opt,name=generative_model_node,json=generativeModelNode,proto3" json:"generative_model_node,omitempty"` // @gotags: yaml:"generativeModelNode"
	GenerativeModel     string `protobuf:"bytes,4,opt,name=generative_model,json=generativeModel,proto3" json:"generative_model,omitempty"`               // @gotags: yaml:"generativeModel"
	GuardrailModelNode  string `protobuf:"bytes,5,opt,name=guardrail_model_node,json=guardrailModelNode,proto3" json:"guardrail_model_node,omitempty"`    // @gotags: yaml:"guardrailModelNode"
	GuardrailModel      string `protobuf:"bytes,6,opt,name=guardrail_model,json=guardrailModel,proto3" json:"guardrail_model,omitempty"`                  // @gotags: yaml:"guardrailModel"
}

func (x *AIAttributes) Reset() {
	*x = AIAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AIAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIAttributes) ProtoMessage() {}

func (x *AIAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIAttributes.ProtoReflect.Descriptor instead.
func (*AIAttributes) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{1}
}

func (x *AIAttributes) GetEmbeddingModelNode() string {
	if x != nil {
		return x.EmbeddingModelNode
	}
	return ""
}

func (x *AIAttributes) GetEmbeddingModel() string {
	if x != nil {
		return x.EmbeddingModel
	}
	return ""
}

func (x *AIAttributes) GetGenerativeModelNode() string {
	if x != nil {
		return x.GenerativeModelNode
	}
	return ""
}

func (x *AIAttributes) GetGenerativeModel() string {
	if x != nil {
		return x.GenerativeModel
	}
	return ""
}

func (x *AIAttributes) GetGuardrailModelNode() string {
	if x != nil {
		return x.GuardrailModelNode
	}
	return ""
}

func (x *AIAttributes) GetGuardrailModel() string {
	if x != nil {
		return x.GuardrailModel
	}
	return ""
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                               // @gotags: yaml:"name"
	DisplayName          string            `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`                              // @gotags: yaml:"displayName"
	OrgId                string            `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                                                // @gotags: yaml:"orgId"
	Users                []string          `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`                                                             // @gotags: yaml:"users"
	SecretPasscode       *CredentialSalt   `protobuf:"bytes,5,opt,name=secret_passcode,json=secretPasscode,proto3" json:"secret_passcode,omitempty"`                     // @gotags: yaml:"secretPasscode"
	Status               string            `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                                           // @gotags: yaml:"status"
	BackendSecretStorage *BackendStorages  `protobuf:"bytes,7,opt,name=backend_secret_storage,json=backendSecretStorage,proto3" json:"backend_secret_storage,omitempty"` // @gotags: yaml:"backendSecretStorage"
	ArtifactStorage      *BackendStorages  `protobuf:"bytes,8,opt,name=artifact_storage,json=artifactStorage,proto3" json:"artifact_storage,omitempty"`                  // @gotags: yaml:"artifactStorage"
	ResourceBase         *VapusBase        `protobuf:"bytes,9,opt,name=resource_base,json=resourceBase,proto3" json:"resource_base,omitempty"`                           // @gotags: yaml:"resourceBase"
	OrgType              OrganizationTypes `protobuf:"varint,10,opt,name=org_type,json=orgType,proto3,enum=models.v1alpha1.OrganizationTypes" json:"org_type,omitempty"` // @gotags: yaml:"orgType"
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{2}
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organization) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Organization) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Organization) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Organization) GetSecretPasscode() *CredentialSalt {
	if x != nil {
		return x.SecretPasscode
	}
	return nil
}

func (x *Organization) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Organization) GetBackendSecretStorage() *BackendStorages {
	if x != nil {
		return x.BackendSecretStorage
	}
	return nil
}

func (x *Organization) GetArtifactStorage() *BackendStorages {
	if x != nil {
		return x.ArtifactStorage
	}
	return nil
}

func (x *Organization) GetResourceBase() *VapusBase {
	if x != nil {
		return x.ResourceBase
	}
	return nil
}

func (x *Organization) GetOrgType() OrganizationTypes {
	if x != nil {
		return x.OrgType
	}
	return OrganizationTypes_CONSUMER_ORG
}

// *
// Message representing the LDAP authentication parameters.
type AuthnLDAP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VId string `protobuf:"bytes,1,opt,name=v_id,json=vId,proto3" json:"v_id,omitempty"` // @gotags: yaml:"vId"
}

func (x *AuthnLDAP) Reset() {
	*x = AuthnLDAP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthnLDAP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthnLDAP) ProtoMessage() {}

func (x *AuthnLDAP) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthnLDAP.ProtoReflect.Descriptor instead.
func (*AuthnLDAP) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{3}
}

func (x *AuthnLDAP) GetVId() string {
	if x != nil {
		return x.VId
	}
	return ""
}

type VapusStudioSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAddress string `protobuf:"bytes,1,opt,name=service_address,json=serviceAddress,proto3" json:"service_address,omitempty"` // @gotags: yaml:"serviceAddress"
}

func (x *VapusStudioSettings) Reset() {
	*x = VapusStudioSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VapusStudioSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VapusStudioSettings) ProtoMessage() {}

func (x *VapusStudioSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VapusStudioSettings.ProtoReflect.Descriptor instead.
func (*VapusStudioSettings) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{4}
}

func (x *VapusStudioSettings) GetServiceAddress() string {
	if x != nil {
		return x.ServiceAddress
	}
	return ""
}

type Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                                                             // @gotags: yaml:"status,omitempty"
	PluginType    IntegrationPluginTypes `protobuf:"varint,2,opt,name=plugin_type,json=pluginType,proto3,enum=models.v1alpha1.IntegrationPluginTypes" json:"plugin_type,omitempty"`      // @gotags: yaml:"pluginType,omitempty"
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                                                 // @gotags: yaml:"name,omitempty"
	NetworkParams *PluginNetworkParams   `protobuf:"bytes,4,opt,name=network_params,json=networkParams,proto3" json:"network_params,omitempty"`                                          // @gotags: yaml:"networkParams,omitempty"
	DynamicParams []*Mapper              `protobuf:"bytes,5,rep,name=dynamic_params,json=dynamicParams,proto3" json:"dynamic_params,omitempty"`                                          // @gotags: yaml:"dynamicParams,omitempty"
	Scope         string                 `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`                                                                               // @gotags: yaml:"scope,omitempty"
	Org           string                 `protobuf:"bytes,7,opt,name=org,proto3" json:"org,omitempty"`                                                                                   // @gotags: yaml:"org,omitempty"
	Editable      bool                   `protobuf:"varint,8,opt,name=editable,proto3" json:"editable,omitempty"`                                                                        // @gotags: yaml:"editable,omitempty"
	PluginService IntegrationPlugins     `protobuf:"varint,9,opt,name=plugin_service,json=pluginService,proto3,enum=models.v1alpha1.IntegrationPlugins" json:"plugin_service,omitempty"` // @gotags: yaml:"pluginService,omitempty"
	PluginId      string                 `protobuf:"bytes,10,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`                                                        // @gotags: yaml:"pluginId,omitempty"
	ResourceBase  *VapusBase             `protobuf:"bytes,11,opt,name=resource_base,json=resourceBase,proto3" json:"resource_base,omitempty"`                                            // @gotags: yaml:"resourceBase"
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{5}
}

func (x *Plugin) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Plugin) GetPluginType() IntegrationPluginTypes {
	if x != nil {
		return x.PluginType
	}
	return IntegrationPluginTypes_INVALID_PLUGIN_TYPE
}

func (x *Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plugin) GetNetworkParams() *PluginNetworkParams {
	if x != nil {
		return x.NetworkParams
	}
	return nil
}

func (x *Plugin) GetDynamicParams() []*Mapper {
	if x != nil {
		return x.DynamicParams
	}
	return nil
}

func (x *Plugin) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Plugin) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *Plugin) GetEditable() bool {
	if x != nil {
		return x.Editable
	}
	return false
}

func (x *Plugin) GetPluginService() IntegrationPlugins {
	if x != nil {
		return x.PluginService
	}
	return IntegrationPlugins_INVALID_PLUGIN
}

func (x *Plugin) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *Plugin) GetResourceBase() *VapusBase {
	if x != nil {
		return x.ResourceBase
	}
	return nil
}

type PluginNetworkParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                 string                `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                                                   // @gotags: yaml:"url,omitempty"
	Port                string                `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`                                                                 // @gotags: yaml:"port,omitempty"
	Version             string                `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`                                                           // @gotags: yaml:"version,omitempty"
	Credentials         *GenericCredentialObj `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`                                                   // @gotags: yaml:"credentials,omitempty"
	Name                string                `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                                 // @gotags: yaml:"name"
	IsAlreadyInSecretBs bool                  `protobuf:"varint,6,opt,name=is_already_in_secret_bs,json=isAlreadyInSecretBs,proto3" json:"is_already_in_secret_bs,omitempty"` // @gotags: yaml:"isAlreadyInSecretBS"
	SecretName          string                `protobuf:"bytes,7,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`                                   // @gotags: yaml:"secretName"
}

func (x *PluginNetworkParams) Reset() {
	*x = PluginNetworkParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginNetworkParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginNetworkParams) ProtoMessage() {}

func (x *PluginNetworkParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginNetworkParams.ProtoReflect.Descriptor instead.
func (*PluginNetworkParams) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{6}
}

func (x *PluginNetworkParams) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PluginNetworkParams) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *PluginNetworkParams) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PluginNetworkParams) GetCredentials() *GenericCredentialObj {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *PluginNetworkParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginNetworkParams) GetIsAlreadyInSecretBs() bool {
	if x != nil {
		return x.IsAlreadyInSecretBs
	}
	return false
}

func (x *PluginNetworkParams) GetSecretName() string {
	if x != nil {
		return x.SecretName
	}
	return ""
}

type AccountProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses   []*Address `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`     // @gotags: yaml:"addresses"
	Logo        string     `protobuf:"bytes,2,opt,name=logo,proto3" json:"logo,omitempty"`               // @gotags: yaml:"logo"
	Description string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // @gotags: yaml:"description"
	Moto        string     `protobuf:"bytes,4,opt,name=moto,proto3" json:"moto,omitempty"`               // @gotags: yaml:"moto"
	Favicon     string     `protobuf:"bytes,5,opt,name=favicon,proto3" json:"favicon,omitempty"`         // @gotags: yaml:"favicon"
}

func (x *AccountProfile) Reset() {
	*x = AccountProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountProfile) ProtoMessage() {}

func (x *AccountProfile) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountProfile.ProtoReflect.Descriptor instead.
func (*AccountProfile) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{7}
}

func (x *AccountProfile) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *AccountProfile) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *AccountProfile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccountProfile) GetMoto() string {
	if x != nil {
		return x.Moto
	}
	return ""
}

func (x *AccountProfile) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

type AccountSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoogleAnalyticsTagId string `protobuf:"bytes,1,opt,name=google_analytics_tag_id,json=googleAnalyticsTagId,proto3" json:"google_analytics_tag_id,omitempty"` // @gotags: yaml:"googleAnalyticsTagId"
}

func (x *AccountSettings) Reset() {
	*x = AccountSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSettings) ProtoMessage() {}

func (x *AccountSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_models_v1alpha1_organizations_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSettings.ProtoReflect.Descriptor instead.
func (*AccountSettings) Descriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_organizations_proto_rawDescGZIP(), []int{8}
}

func (x *AccountSettings) GetGoogleAnalyticsTagId() string {
	if x != nil {
		return x.GoogleAnalyticsTagId
	}
	return ""
}

var File_protos_models_v1alpha1_organizations_proto protoreflect.FileDescriptor

var file_protos_models_v1alpha1_organizations_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x23, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x05, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a,
	0x0c, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x47,
	0x0a, 0x12, 0x64, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6a, 0x77, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x57, 0x54,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x64, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4a, 0x77, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x56, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x52, 0x0a, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x12, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6e,
	0x4f, 0x49, 0x44, 0x43, 0x52, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x61,
	0x69, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x49, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x0c, 0x61, 0x69, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xa3, 0x02,
	0x0a, 0x0c, 0x41, 0x49, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x72, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x75, 0x61, 0x72, 0x64, 0x72, 0x61, 0x69,
	0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x72, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x72, 0x61, 0x69, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0xf9, 0x03, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x61,
	0x6c, 0x74, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x56, 0x0a, 0x16, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x14, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0f,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x70, 0x75, 0x73, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x1e, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4c, 0x44, 0x41, 0x50, 0x12, 0x11, 0x0a, 0x04,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x49, 0x64, 0x22,
	0x3e, 0x0a, 0x13, 0x56, 0x61, 0x70, 0x75, 0x73, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xf9, 0x03, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x48, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x4b, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3e, 0x0a,
	0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0d,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x0d,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x70, 0x75, 0x73, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x13,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x62, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x69, 0x73, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x42, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x54, 0x61, 0x67, 0x49, 0x64,
	0x42, 0xbc, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x12, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73,
	0x64, 0x61, 0x74, 0x61, 0x2d, 0x6f, 0x73, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x0f, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02,
	0x1b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_models_v1alpha1_organizations_proto_rawDescOnce sync.Once
	file_protos_models_v1alpha1_organizations_proto_rawDescData = file_protos_models_v1alpha1_organizations_proto_rawDesc
)

func file_protos_models_v1alpha1_organizations_proto_rawDescGZIP() []byte {
	file_protos_models_v1alpha1_organizations_proto_rawDescOnce.Do(func() {
		file_protos_models_v1alpha1_organizations_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_models_v1alpha1_organizations_proto_rawDescData)
	})
	return file_protos_models_v1alpha1_organizations_proto_rawDescData
}

var file_protos_models_v1alpha1_organizations_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protos_models_v1alpha1_organizations_proto_goTypes = []any{
	(*Account)(nil),              // 0: models.v1alpha1.Account
	(*AIAttributes)(nil),         // 1: models.v1alpha1.AIAttributes
	(*Organization)(nil),         // 2: models.v1alpha1.Organization
	(*AuthnLDAP)(nil),            // 3: models.v1alpha1.AuthnLDAP
	(*VapusStudioSettings)(nil),  // 4: models.v1alpha1.VapusStudioSettings
	(*Plugin)(nil),               // 5: models.v1alpha1.Plugin
	(*PluginNetworkParams)(nil),  // 6: models.v1alpha1.PluginNetworkParams
	(*AccountProfile)(nil),       // 7: models.v1alpha1.AccountProfile
	(*AccountSettings)(nil),      // 8: models.v1alpha1.AccountSettings
	(AuthnMethod)(0),             // 9: models.v1alpha1.AuthnMethod
	(*JWTParams)(nil),            // 10: models.v1alpha1.JWTParams
	(*BackendStorages)(nil),      // 11: models.v1alpha1.BackendStorages
	(*AuthnOIDC)(nil),            // 12: models.v1alpha1.AuthnOIDC
	(*CredentialSalt)(nil),       // 13: models.v1alpha1.CredentialSalt
	(*VapusBase)(nil),            // 14: models.v1alpha1.VapusBase
	(OrganizationTypes)(0),       // 15: models.v1alpha1.OrganizationTypes
	(IntegrationPluginTypes)(0),  // 16: models.v1alpha1.IntegrationPluginTypes
	(*Mapper)(nil),               // 17: models.v1alpha1.Mapper
	(IntegrationPlugins)(0),      // 18: models.v1alpha1.IntegrationPlugins
	(*GenericCredentialObj)(nil), // 19: models.v1alpha1.GenericCredentialObj
	(*Address)(nil),              // 20: models.v1alpha1.Address
}
var file_protos_models_v1alpha1_organizations_proto_depIdxs = []int32{
	9,  // 0: models.v1alpha1.Account.authn_method:type_name -> models.v1alpha1.AuthnMethod
	10, // 1: models.v1alpha1.Account.dm_access_jwt_keys:type_name -> models.v1alpha1.JWTParams
	11, // 2: models.v1alpha1.Account.backend_secret_storage:type_name -> models.v1alpha1.BackendStorages
	11, // 3: models.v1alpha1.Account.backend_data_storage:type_name -> models.v1alpha1.BackendStorages
	12, // 4: models.v1alpha1.Account.oidc_params:type_name -> models.v1alpha1.AuthnOIDC
	7,  // 5: models.v1alpha1.Account.profile:type_name -> models.v1alpha1.AccountProfile
	1,  // 6: models.v1alpha1.Account.ai_attributes:type_name -> models.v1alpha1.AIAttributes
	8,  // 7: models.v1alpha1.Account.settings:type_name -> models.v1alpha1.AccountSettings
	13, // 8: models.v1alpha1.Organization.secret_passcode:type_name -> models.v1alpha1.CredentialSalt
	11, // 9: models.v1alpha1.Organization.backend_secret_storage:type_name -> models.v1alpha1.BackendStorages
	11, // 10: models.v1alpha1.Organization.artifact_storage:type_name -> models.v1alpha1.BackendStorages
	14, // 11: models.v1alpha1.Organization.resource_base:type_name -> models.v1alpha1.VapusBase
	15, // 12: models.v1alpha1.Organization.org_type:type_name -> models.v1alpha1.OrganizationTypes
	16, // 13: models.v1alpha1.Plugin.plugin_type:type_name -> models.v1alpha1.IntegrationPluginTypes
	6,  // 14: models.v1alpha1.Plugin.network_params:type_name -> models.v1alpha1.PluginNetworkParams
	17, // 15: models.v1alpha1.Plugin.dynamic_params:type_name -> models.v1alpha1.Mapper
	18, // 16: models.v1alpha1.Plugin.plugin_service:type_name -> models.v1alpha1.IntegrationPlugins
	14, // 17: models.v1alpha1.Plugin.resource_base:type_name -> models.v1alpha1.VapusBase
	19, // 18: models.v1alpha1.PluginNetworkParams.credentials:type_name -> models.v1alpha1.GenericCredentialObj
	20, // 19: models.v1alpha1.AccountProfile.addresses:type_name -> models.v1alpha1.Address
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_protos_models_v1alpha1_organizations_proto_init() }
func file_protos_models_v1alpha1_organizations_proto_init() {
	if File_protos_models_v1alpha1_organizations_proto != nil {
		return
	}
	file_protos_models_v1alpha1_common_proto_init()
	file_protos_models_v1alpha1_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_models_v1alpha1_organizations_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AIAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AuthnLDAP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*VapusStudioSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PluginNetworkParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AccountProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_models_v1alpha1_organizations_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AccountSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_models_v1alpha1_organizations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_models_v1alpha1_organizations_proto_goTypes,
		DependencyIndexes: file_protos_models_v1alpha1_organizations_proto_depIdxs,
		MessageInfos:      file_protos_models_v1alpha1_organizations_proto_msgTypes,
	}.Build()
	File_protos_models_v1alpha1_organizations_proto = out.File
	file_protos_models_v1alpha1_organizations_proto_rawDesc = nil
	file_protos_models_v1alpha1_organizations_proto_goTypes = nil
	file_protos_models_v1alpha1_organizations_proto_depIdxs = nil
}
