// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: protos/models/v1alpha1/enums.proto

//import "googleapis/v1/annotations.proto";
// import "buf/validate/validate.proto";

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceScope int32

const (
	ResourceScope_ORG_SCOPE     ResourceScope = 0
	ResourceScope_ACCOUNT_SCOPE ResourceScope = 1
	ResourceScope_USER_SCOPE    ResourceScope = 2
)

// Enum value maps for ResourceScope.
var (
	ResourceScope_name = map[int32]string{
		0: "ORG_SCOPE",
		1: "ACCOUNT_SCOPE",
		2: "USER_SCOPE",
	}
	ResourceScope_value = map[string]int32{
		"ORG_SCOPE":     0,
		"ACCOUNT_SCOPE": 1,
		"USER_SCOPE":    2,
	}
)

func (x ResourceScope) Enum() *ResourceScope {
	p := new(ResourceScope)
	*p = x
	return p
}

func (x ResourceScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceScope) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[0].Descriptor()
}

func (ResourceScope) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[0]
}

func (x ResourceScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceScope.Descriptor instead.
func (ResourceScope) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{0}
}

type VapusSvcs int32

const (
	VapusSvcs_AISTUDIO  VapusSvcs = 0
	VapusSvcs_WEBAPP    VapusSvcs = 1
	VapusSvcs_MLUTILITY VapusSvcs = 2
)

// Enum value maps for VapusSvcs.
var (
	VapusSvcs_name = map[int32]string{
		0: "AISTUDIO",
		1: "WEBAPP",
		2: "MLUTILITY",
	}
	VapusSvcs_value = map[string]int32{
		"AISTUDIO":  0,
		"WEBAPP":    1,
		"MLUTILITY": 2,
	}
)

func (x VapusSvcs) Enum() *VapusSvcs {
	p := new(VapusSvcs)
	*p = x
	return p
}

func (x VapusSvcs) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VapusSvcs) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[1].Descriptor()
}

func (VapusSvcs) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[1]
}

func (x VapusSvcs) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VapusSvcs.Descriptor instead.
func (VapusSvcs) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{1}
}

type OrganizationTypes int32

const (
	OrganizationTypes_CONSUMER_ORG OrganizationTypes = 0
	OrganizationTypes_SERVICE_ORG  OrganizationTypes = 1
)

// Enum value maps for OrganizationTypes.
var (
	OrganizationTypes_name = map[int32]string{
		0: "CONSUMER_ORG",
		1: "SERVICE_ORG",
	}
	OrganizationTypes_value = map[string]int32{
		"CONSUMER_ORG": 0,
		"SERVICE_ORG":  1,
	}
)

func (x OrganizationTypes) Enum() *OrganizationTypes {
	p := new(OrganizationTypes)
	*p = x
	return p
}

func (x OrganizationTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrganizationTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[2].Descriptor()
}

func (OrganizationTypes) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[2]
}

func (x OrganizationTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrganizationTypes.Descriptor instead.
func (OrganizationTypes) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{2}
}

type Resources int32

const (
	Resources_DATAMARKETPLACE Resources = 0
	Resources_DATAPRODUCT     Resources = 1
	Resources_DATACONTAINER   Resources = 2
	Resources_DATACATALOG     Resources = 3
	Resources_AIMODELS        Resources = 4
	Resources_AIPROMPTS       Resources = 5
	Resources_AIAGENTS        Resources = 6
)

// Enum value maps for Resources.
var (
	Resources_name = map[int32]string{
		0: "DATAMARKETPLACE",
		1: "DATAPRODUCT",
		2: "DATACONTAINER",
		3: "DATACATALOG",
		4: "AIMODELS",
		5: "AIPROMPTS",
		6: "AIAGENTS",
	}
	Resources_value = map[string]int32{
		"DATAMARKETPLACE": 0,
		"DATAPRODUCT":     1,
		"DATACONTAINER":   2,
		"DATACATALOG":     3,
		"AIMODELS":        4,
		"AIPROMPTS":       5,
		"AIAGENTS":        6,
	}
)

func (x Resources) Enum() *Resources {
	p := new(Resources)
	*p = x
	return p
}

func (x Resources) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resources) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[3].Descriptor()
}

func (Resources) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[3]
}

func (x Resources) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resources.Descriptor instead.
func (Resources) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{3}
}

type AccessTokenScope int32

const (
	AccessTokenScope_INVALID_AT_SCOPE  AccessTokenScope = 0
	AccessTokenScope_DOMAIN_TOKEN      AccessTokenScope = 1
	AccessTokenScope_DATAPRODUCT_TOKEN AccessTokenScope = 2
)

// Enum value maps for AccessTokenScope.
var (
	AccessTokenScope_name = map[int32]string{
		0: "INVALID_AT_SCOPE",
		1: "DOMAIN_TOKEN",
		2: "DATAPRODUCT_TOKEN",
	}
	AccessTokenScope_value = map[string]int32{
		"INVALID_AT_SCOPE":  0,
		"DOMAIN_TOKEN":      1,
		"DATAPRODUCT_TOKEN": 2,
	}
)

func (x AccessTokenScope) Enum() *AccessTokenScope {
	p := new(AccessTokenScope)
	*p = x
	return p
}

func (x AccessTokenScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessTokenScope) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[4].Descriptor()
}

func (AccessTokenScope) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[4]
}

func (x AccessTokenScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessTokenScope.Descriptor instead.
func (AccessTokenScope) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{4}
}

type HashAlgos int32

const (
	HashAlgos_INVALID_HASH_ALGO HashAlgos = 0
	HashAlgos_SHA_256           HashAlgos = 1
)

// Enum value maps for HashAlgos.
var (
	HashAlgos_name = map[int32]string{
		0: "INVALID_HASH_ALGO",
		1: "SHA_256",
	}
	HashAlgos_value = map[string]int32{
		"INVALID_HASH_ALGO": 0,
		"SHA_256":           1,
	}
)

func (x HashAlgos) Enum() *HashAlgos {
	p := new(HashAlgos)
	*p = x
	return p
}

func (x HashAlgos) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashAlgos) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[5].Descriptor()
}

func (HashAlgos) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[5]
}

func (x HashAlgos) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashAlgos.Descriptor instead.
func (HashAlgos) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{5}
}

type LcAction int32

const (
	LcAction_INVALID_ACTION LcAction = 0
	LcAction_ADD            LcAction = 1
	LcAction_DELETE         LcAction = 2
	LcAction_UPDATE         LcAction = 3
	LcAction_CREATE         LcAction = 4
	LcAction_RUN            LcAction = 5
	LcAction_BUILD          LcAction = 6
	LcAction_DEPLOY         LcAction = 7
	LcAction_GET            LcAction = 8
	LcAction_LIST           LcAction = 9
)

// Enum value maps for LcAction.
var (
	LcAction_name = map[int32]string{
		0: "INVALID_ACTION",
		1: "ADD",
		2: "DELETE",
		3: "UPDATE",
		4: "CREATE",
		5: "RUN",
		6: "BUILD",
		7: "DEPLOY",
		8: "GET",
		9: "LIST",
	}
	LcAction_value = map[string]int32{
		"INVALID_ACTION": 0,
		"ADD":            1,
		"DELETE":         2,
		"UPDATE":         3,
		"CREATE":         4,
		"RUN":            5,
		"BUILD":          6,
		"DEPLOY":         7,
		"GET":            8,
		"LIST":           9,
	}
)

func (x LcAction) Enum() *LcAction {
	p := new(LcAction)
	*p = x
	return p
}

func (x LcAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LcAction) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[6].Descriptor()
}

func (LcAction) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[6]
}

func (x LcAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LcAction.Descriptor instead.
func (LcAction) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{6}
}

type AuthnMethod int32

const (
	AuthnMethod_AM_INVALID AuthnMethod = 0
	AuthnMethod_OIDC       AuthnMethod = 1
	AuthnMethod_LDAP       AuthnMethod = 2
)

// Enum value maps for AuthnMethod.
var (
	AuthnMethod_name = map[int32]string{
		0: "AM_INVALID",
		1: "OIDC",
		2: "LDAP",
	}
	AuthnMethod_value = map[string]int32{
		"AM_INVALID": 0,
		"OIDC":       1,
		"LDAP":       2,
	}
)

func (x AuthnMethod) Enum() *AuthnMethod {
	p := new(AuthnMethod)
	*p = x
	return p
}

func (x AuthnMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthnMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[7].Descriptor()
}

func (AuthnMethod) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[7]
}

func (x AuthnMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthnMethod.Descriptor instead.
func (AuthnMethod) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{7}
}

type TtlDuration int32

const (
	TtlDuration_DEFAULT_TTL       TtlDuration = 0
	TtlDuration_TTL_SECONDS       TtlDuration = 1
	TtlDuration_TTL_MINUTES       TtlDuration = 2
	TtlDuration_TTL_HOURS         TtlDuration = 3
	TtlDuration_TTL_DAYS          TtlDuration = 4
	TtlDuration_TTL_MONTHS        TtlDuration = 5
	TtlDuration_TTL_NEVER_EXPIRES TtlDuration = 6
)

// Enum value maps for TtlDuration.
var (
	TtlDuration_name = map[int32]string{
		0: "DEFAULT_TTL",
		1: "TTL_SECONDS",
		2: "TTL_MINUTES",
		3: "TTL_HOURS",
		4: "TTL_DAYS",
		5: "TTL_MONTHS",
		6: "TTL_NEVER_EXPIRES",
	}
	TtlDuration_value = map[string]int32{
		"DEFAULT_TTL":       0,
		"TTL_SECONDS":       1,
		"TTL_MINUTES":       2,
		"TTL_HOURS":         3,
		"TTL_DAYS":          4,
		"TTL_MONTHS":        5,
		"TTL_NEVER_EXPIRES": 6,
	}
)

func (x TtlDuration) Enum() *TtlDuration {
	p := new(TtlDuration)
	*p = x
	return p
}

func (x TtlDuration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TtlDuration) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[8].Descriptor()
}

func (TtlDuration) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[8]
}

func (x TtlDuration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TtlDuration.Descriptor instead.
func (TtlDuration) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{8}
}

type TTLStatus int32

const (
	TTLStatus_INVALID_TTLSTATUS TTLStatus = 0
	TTLStatus_TTL_VALID         TTLStatus = 1
	TTLStatus_TTL_REVOKED       TTLStatus = 2
	TTLStatus_TTL_EXPIRED       TTLStatus = 3
)

// Enum value maps for TTLStatus.
var (
	TTLStatus_name = map[int32]string{
		0: "INVALID_TTLSTATUS",
		1: "TTL_VALID",
		2: "TTL_REVOKED",
		3: "TTL_EXPIRED",
	}
	TTLStatus_value = map[string]int32{
		"INVALID_TTLSTATUS": 0,
		"TTL_VALID":         1,
		"TTL_REVOKED":       2,
		"TTL_EXPIRED":       3,
	}
)

func (x TTLStatus) Enum() *TTLStatus {
	p := new(TTLStatus)
	*p = x
	return p
}

func (x TTLStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TTLStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[9].Descriptor()
}

func (TTLStatus) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[9]
}

func (x TTLStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TTLStatus.Descriptor instead.
func (TTLStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{9}
}

type EncryptionAlgo int32

const (
	EncryptionAlgo_JSA_INVALID EncryptionAlgo = 0
	EncryptionAlgo_ED25519     EncryptionAlgo = 1
	EncryptionAlgo_ECDSA       EncryptionAlgo = 2
	EncryptionAlgo_RSA         EncryptionAlgo = 3
)

// Enum value maps for EncryptionAlgo.
var (
	EncryptionAlgo_name = map[int32]string{
		0: "JSA_INVALID",
		1: "ED25519",
		2: "ECDSA",
		3: "RSA",
	}
	EncryptionAlgo_value = map[string]int32{
		"JSA_INVALID": 0,
		"ED25519":     1,
		"ECDSA":       2,
		"RSA":         3,
	}
)

func (x EncryptionAlgo) Enum() *EncryptionAlgo {
	p := new(EncryptionAlgo)
	*p = x
	return p
}

func (x EncryptionAlgo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionAlgo) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[10].Descriptor()
}

func (EncryptionAlgo) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[10]
}

func (x EncryptionAlgo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionAlgo.Descriptor instead.
func (EncryptionAlgo) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{10}
}

type BEStoreAccessScope int32

const (
	BEStoreAccessScope_READER BEStoreAccessScope = 0
	BEStoreAccessScope_WRITER BEStoreAccessScope = 1
)

// Enum value maps for BEStoreAccessScope.
var (
	BEStoreAccessScope_name = map[int32]string{
		0: "READER",
		1: "WRITER",
	}
	BEStoreAccessScope_value = map[string]int32{
		"READER": 0,
		"WRITER": 1,
	}
)

func (x BEStoreAccessScope) Enum() *BEStoreAccessScope {
	p := new(BEStoreAccessScope)
	*p = x
	return p
}

func (x BEStoreAccessScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BEStoreAccessScope) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[11].Descriptor()
}

func (BEStoreAccessScope) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[11]
}

func (x BEStoreAccessScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BEStoreAccessScope.Descriptor instead.
func (BEStoreAccessScope) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{11}
}

type CommonStatus int32

const (
	CommonStatus_INVALID_STATUS     CommonStatus = 0
	CommonStatus_ACTIVE             CommonStatus = 1
	CommonStatus_INACTIVE           CommonStatus = 2
	CommonStatus_VALIDATION_PENDING CommonStatus = 3
	CommonStatus_DELETED            CommonStatus = 4
	CommonStatus_EXPIRED            CommonStatus = 5
	CommonStatus_INVALID            CommonStatus = 6
	CommonStatus_INVITED            CommonStatus = 7
	CommonStatus_FAILED             CommonStatus = 8
	CommonStatus_SUCCESS            CommonStatus = 9
	CommonStatus_ATTACHED           CommonStatus = 10
	CommonStatus_CONFIGURING        CommonStatus = 11
	CommonStatus_SYNCING            CommonStatus = 12
	CommonStatus_CONFIGUR_ERR       CommonStatus = 13
	CommonStatus_ACTIVE_READY       CommonStatus = 14
)

// Enum value maps for CommonStatus.
var (
	CommonStatus_name = map[int32]string{
		0:  "INVALID_STATUS",
		1:  "ACTIVE",
		2:  "INACTIVE",
		3:  "VALIDATION_PENDING",
		4:  "DELETED",
		5:  "EXPIRED",
		6:  "INVALID",
		7:  "INVITED",
		8:  "FAILED",
		9:  "SUCCESS",
		10: "ATTACHED",
		11: "CONFIGURING",
		12: "SYNCING",
		13: "CONFIGUR_ERR",
		14: "ACTIVE_READY",
	}
	CommonStatus_value = map[string]int32{
		"INVALID_STATUS":     0,
		"ACTIVE":             1,
		"INACTIVE":           2,
		"VALIDATION_PENDING": 3,
		"DELETED":            4,
		"EXPIRED":            5,
		"INVALID":            6,
		"INVITED":            7,
		"FAILED":             8,
		"SUCCESS":            9,
		"ATTACHED":           10,
		"CONFIGURING":        11,
		"SYNCING":            12,
		"CONFIGUR_ERR":       13,
		"ACTIVE_READY":       14,
	}
)

func (x CommonStatus) Enum() *CommonStatus {
	p := new(CommonStatus)
	*p = x
	return p
}

func (x CommonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[12].Descriptor()
}

func (CommonStatus) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[12]
}

func (x CommonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonStatus.Descriptor instead.
func (CommonStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{12}
}

type ContentFormats int32

const (
	ContentFormats_YAML       ContentFormats = 0
	ContentFormats_JSON       ContentFormats = 1
	ContentFormats_TOML       ContentFormats = 2
	ContentFormats_PLAIN_TEXT ContentFormats = 3
	ContentFormats_CSV        ContentFormats = 4
	ContentFormats_PDF        ContentFormats = 5
	ContentFormats_PNG        ContentFormats = 6
	ContentFormats_JPG        ContentFormats = 7
	ContentFormats_JPEG       ContentFormats = 8
	ContentFormats_DATASET    ContentFormats = 9
	ContentFormats_HTML       ContentFormats = 10
)

// Enum value maps for ContentFormats.
var (
	ContentFormats_name = map[int32]string{
		0:  "YAML",
		1:  "JSON",
		2:  "TOML",
		3:  "PLAIN_TEXT",
		4:  "CSV",
		5:  "PDF",
		6:  "PNG",
		7:  "JPG",
		8:  "JPEG",
		9:  "DATASET",
		10: "HTML",
	}
	ContentFormats_value = map[string]int32{
		"YAML":       0,
		"JSON":       1,
		"TOML":       2,
		"PLAIN_TEXT": 3,
		"CSV":        4,
		"PDF":        5,
		"PNG":        6,
		"JPG":        7,
		"JPEG":       8,
		"DATASET":    9,
		"HTML":       10,
	}
)

func (x ContentFormats) Enum() *ContentFormats {
	p := new(ContentFormats)
	*p = x
	return p
}

func (x ContentFormats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentFormats) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[13].Descriptor()
}

func (ContentFormats) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[13]
}

func (x ContentFormats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentFormats.Descriptor instead.
func (ContentFormats) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{13}
}

type TlsType int32

const (
	TlsType_INSECURE  TlsType = 0
	TlsType_PLAIN_TLS TlsType = 1
	TlsType_MTLS      TlsType = 2
)

// Enum value maps for TlsType.
var (
	TlsType_name = map[int32]string{
		0: "INSECURE",
		1: "PLAIN_TLS",
		2: "MTLS",
	}
	TlsType_value = map[string]int32{
		"INSECURE":  0,
		"PLAIN_TLS": 1,
		"MTLS":      2,
	}
)

func (x TlsType) Enum() *TlsType {
	p := new(TlsType)
	*p = x
	return p
}

func (x TlsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TlsType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[14].Descriptor()
}

func (TlsType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[14]
}

func (x TlsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TlsType.Descriptor instead.
func (TlsType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{14}
}

type RequestObjects int32

const (
	RequestObjects_INVALID_REQUEST_OBJECT           RequestObjects = 0
	RequestObjects_ALL                              RequestObjects = 1
	RequestObjects_VAPUS_DATAPRODUCTS               RequestObjects = 2
	RequestObjects_VAPUS_DATAWORKERS                RequestObjects = 3
	RequestObjects_VAPUS_DATASOURCES                RequestObjects = 4
	RequestObjects_VAPUS_DATASOURCE_CREDS           RequestObjects = 5
	RequestObjects_VAPUS_DOMAINS                    RequestObjects = 6
	RequestObjects_VAPUS_DATA_CONTAINER_DEPLOYMENTS RequestObjects = 7
	RequestObjects_VAPUS_AIMODEL_NODES              RequestObjects = 8
	RequestObjects_VAPUS_DATAMARKETPLACE            RequestObjects = 9
	RequestObjects_VAPUS_DATA_WORKER_DEPLOYMENTS    RequestObjects = 10
	RequestObjects_VAPUS_ACCOUNT                    RequestObjects = 11
	RequestObjects_VAPUS_AIPROMPTS                  RequestObjects = 12
	RequestObjects_VAPUS_AIAGENTS                   RequestObjects = 13
	RequestObjects_VAPUS_PLUGINS                    RequestObjects = 14
	RequestObjects_VAPUS_AIGUARDRAILS               RequestObjects = 15
)

// Enum value maps for RequestObjects.
var (
	RequestObjects_name = map[int32]string{
		0:  "INVALID_REQUEST_OBJECT",
		1:  "ALL",
		2:  "VAPUS_DATAPRODUCTS",
		3:  "VAPUS_DATAWORKERS",
		4:  "VAPUS_DATASOURCES",
		5:  "VAPUS_DATASOURCE_CREDS",
		6:  "VAPUS_DOMAINS",
		7:  "VAPUS_DATA_CONTAINER_DEPLOYMENTS",
		8:  "VAPUS_AIMODEL_NODES",
		9:  "VAPUS_DATAMARKETPLACE",
		10: "VAPUS_DATA_WORKER_DEPLOYMENTS",
		11: "VAPUS_ACCOUNT",
		12: "VAPUS_AIPROMPTS",
		13: "VAPUS_AIAGENTS",
		14: "VAPUS_PLUGINS",
		15: "VAPUS_AIGUARDRAILS",
	}
	RequestObjects_value = map[string]int32{
		"INVALID_REQUEST_OBJECT":           0,
		"ALL":                              1,
		"VAPUS_DATAPRODUCTS":               2,
		"VAPUS_DATAWORKERS":                3,
		"VAPUS_DATASOURCES":                4,
		"VAPUS_DATASOURCE_CREDS":           5,
		"VAPUS_DOMAINS":                    6,
		"VAPUS_DATA_CONTAINER_DEPLOYMENTS": 7,
		"VAPUS_AIMODEL_NODES":              8,
		"VAPUS_DATAMARKETPLACE":            9,
		"VAPUS_DATA_WORKER_DEPLOYMENTS":    10,
		"VAPUS_ACCOUNT":                    11,
		"VAPUS_AIPROMPTS":                  12,
		"VAPUS_AIAGENTS":                   13,
		"VAPUS_PLUGINS":                    14,
		"VAPUS_AIGUARDRAILS":               15,
	}
)

func (x RequestObjects) Enum() *RequestObjects {
	p := new(RequestObjects)
	*p = x
	return p
}

func (x RequestObjects) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestObjects) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[15].Descriptor()
}

func (RequestObjects) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[15]
}

func (x RequestObjects) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestObjects.Descriptor instead.
func (RequestObjects) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{15}
}

type ApiTokenType int32

const (
	ApiTokenType_BASIC  ApiTokenType = 0
	ApiTokenType_BEARER ApiTokenType = 1
	ApiTokenType_APIKEY ApiTokenType = 2
)

// Enum value maps for ApiTokenType.
var (
	ApiTokenType_name = map[int32]string{
		0: "BASIC",
		1: "BEARER",
		2: "APIKEY",
	}
	ApiTokenType_value = map[string]int32{
		"BASIC":  0,
		"BEARER": 1,
		"APIKEY": 2,
	}
)

func (x ApiTokenType) Enum() *ApiTokenType {
	p := new(ApiTokenType)
	*p = x
	return p
}

func (x ApiTokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiTokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[16].Descriptor()
}

func (ApiTokenType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[16]
}

func (x ApiTokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiTokenType.Descriptor instead.
func (ApiTokenType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{16}
}

//*
// Enum representing the retention frequency for data compliance.
type Frequency int32

const (
	Frequency_INVALID_FREQUENCY Frequency = 0
	Frequency_MONTH             Frequency = 1
	Frequency_WEEK              Frequency = 2
	Frequency_YEAR              Frequency = 3
	Frequency_HOUR              Frequency = 4
	Frequency_MINUTES           Frequency = 5
	Frequency_SECONDS           Frequency = 6
	Frequency_DAY               Frequency = 7
)

// Enum value maps for Frequency.
var (
	Frequency_name = map[int32]string{
		0: "INVALID_FREQUENCY",
		1: "MONTH",
		2: "WEEK",
		3: "YEAR",
		4: "HOUR",
		5: "MINUTES",
		6: "SECONDS",
		7: "DAY",
	}
	Frequency_value = map[string]int32{
		"INVALID_FREQUENCY": 0,
		"MONTH":             1,
		"WEEK":              2,
		"YEAR":              3,
		"HOUR":              4,
		"MINUTES":           5,
		"SECONDS":           6,
		"DAY":               7,
	}
)

func (x Frequency) Enum() *Frequency {
	p := new(Frequency)
	*p = x
	return p
}

func (x Frequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frequency) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[17].Descriptor()
}

func (Frequency) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[17]
}

func (x Frequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frequency.Descriptor instead.
func (Frequency) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{17}
}

//*
// Enum representing the types of backend storage.
type BackendStorageTypes int32

const (
	BackendStorageTypes_BST_INVALID   BackendStorageTypes = 0
	BackendStorageTypes_BST_SECRETS   BackendStorageTypes = 1
	BackendStorageTypes_BST_DATA      BackendStorageTypes = 2
	BackendStorageTypes_BST_FILE      BackendStorageTypes = 3
	BackendStorageTypes_BST_ARTIFACTS BackendStorageTypes = 4
)

// Enum value maps for BackendStorageTypes.
var (
	BackendStorageTypes_name = map[int32]string{
		0: "BST_INVALID",
		1: "BST_SECRETS",
		2: "BST_DATA",
		3: "BST_FILE",
		4: "BST_ARTIFACTS",
	}
	BackendStorageTypes_value = map[string]int32{
		"BST_INVALID":   0,
		"BST_SECRETS":   1,
		"BST_DATA":      2,
		"BST_FILE":      3,
		"BST_ARTIFACTS": 4,
	}
)

func (x BackendStorageTypes) Enum() *BackendStorageTypes {
	p := new(BackendStorageTypes)
	*p = x
	return p
}

func (x BackendStorageTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackendStorageTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[18].Descriptor()
}

func (BackendStorageTypes) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[18]
}

func (x BackendStorageTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackendStorageTypes.Descriptor instead.
func (BackendStorageTypes) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{18}
}

//*
// Enum representing the onboarding options for backend storage.
type BackendStorageOnboarding int32

const (
	BackendStorageOnboarding_BSO_INVALID       BackendStorageOnboarding = 0
	BackendStorageOnboarding_BSO_INBUILT       BackendStorageOnboarding = 1
	BackendStorageOnboarding_BE_BYOS           BackendStorageOnboarding = 2
	BackendStorageOnboarding_BE_BUILD          BackendStorageOnboarding = 3
	BackendStorageOnboarding_BE_DEFAULT_STUDIO BackendStorageOnboarding = 4
)

// Enum value maps for BackendStorageOnboarding.
var (
	BackendStorageOnboarding_name = map[int32]string{
		0: "BSO_INVALID",
		1: "BSO_INBUILT",
		2: "BE_BYOS",
		3: "BE_BUILD",
		4: "BE_DEFAULT_STUDIO",
	}
	BackendStorageOnboarding_value = map[string]int32{
		"BSO_INVALID":       0,
		"BSO_INBUILT":       1,
		"BE_BYOS":           2,
		"BE_BUILD":          3,
		"BE_DEFAULT_STUDIO": 4,
	}
)

func (x BackendStorageOnboarding) Enum() *BackendStorageOnboarding {
	p := new(BackendStorageOnboarding)
	*p = x
	return p
}

func (x BackendStorageOnboarding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackendStorageOnboarding) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[19].Descriptor()
}

func (BackendStorageOnboarding) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[19]
}

func (x BackendStorageOnboarding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackendStorageOnboarding.Descriptor instead.
func (BackendStorageOnboarding) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{19}
}

//*
// Enum representing the services for backend storage.
type BackendStorageServices int32

const (
	BackendStorageServices_BSS_INVALID            BackendStorageServices = 0
	BackendStorageServices_BSS_POSTGRES           BackendStorageServices = 1
	BackendStorageServices_BSS_HC_VAULT           BackendStorageServices = 2
	BackendStorageServices_BSS_AWS_SECRET_MANAGER BackendStorageServices = 3
	BackendStorageServices_BSS_AWS_S3             BackendStorageServices = 4
	BackendStorageServices_BSS_AZURE_KEY_VAULT    BackendStorageServices = 5
	BackendStorageServices_BSS_GCP_SECRET_MANAGER BackendStorageServices = 6
	BackendStorageServices_BSS_OCI                BackendStorageServices = 7
)

// Enum value maps for BackendStorageServices.
var (
	BackendStorageServices_name = map[int32]string{
		0: "BSS_INVALID",
		1: "BSS_POSTGRES",
		2: "BSS_HC_VAULT",
		3: "BSS_AWS_SECRET_MANAGER",
		4: "BSS_AWS_S3",
		5: "BSS_AZURE_KEY_VAULT",
		6: "BSS_GCP_SECRET_MANAGER",
		7: "BSS_OCI",
	}
	BackendStorageServices_value = map[string]int32{
		"BSS_INVALID":            0,
		"BSS_POSTGRES":           1,
		"BSS_HC_VAULT":           2,
		"BSS_AWS_SECRET_MANAGER": 3,
		"BSS_AWS_S3":             4,
		"BSS_AZURE_KEY_VAULT":    5,
		"BSS_GCP_SECRET_MANAGER": 6,
		"BSS_OCI":                7,
	}
)

func (x BackendStorageServices) Enum() *BackendStorageServices {
	p := new(BackendStorageServices)
	*p = x
	return p
}

func (x BackendStorageServices) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackendStorageServices) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[20].Descriptor()
}

func (BackendStorageServices) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[20]
}

func (x BackendStorageServices) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackendStorageServices.Descriptor instead.
func (BackendStorageServices) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{20}
}

//*
// @enum
// Enumerates the storage engines supported by the Vapus Data Studio system.
type StorageEngine int32

const (
	StorageEngine_INVALID_STORAGE_ENGINE StorageEngine = 0
	StorageEngine_HASHICORPVAULT         StorageEngine = 1
	StorageEngine_POSTGRES               StorageEngine = 2
	StorageEngine_OCI                    StorageEngine = 3
	StorageEngine_BLOB                   StorageEngine = 4
	StorageEngine_GRPC                   StorageEngine = 5
	StorageEngine_AWS_VAULT              StorageEngine = 6
	StorageEngine_GCP_VAULT              StorageEngine = 7
	StorageEngine_AZURE_VAULT            StorageEngine = 8
)

// Enum value maps for StorageEngine.
var (
	StorageEngine_name = map[int32]string{
		0: "INVALID_STORAGE_ENGINE",
		1: "HASHICORPVAULT",
		2: "POSTGRES",
		3: "OCI",
		4: "BLOB",
		5: "GRPC",
		6: "AWS_VAULT",
		7: "GCP_VAULT",
		8: "AZURE_VAULT",
	}
	StorageEngine_value = map[string]int32{
		"INVALID_STORAGE_ENGINE": 0,
		"HASHICORPVAULT":         1,
		"POSTGRES":               2,
		"OCI":                    3,
		"BLOB":                   4,
		"GRPC":                   5,
		"AWS_VAULT":              6,
		"GCP_VAULT":              7,
		"AZURE_VAULT":            8,
	}
)

func (x StorageEngine) Enum() *StorageEngine {
	p := new(StorageEngine)
	*p = x
	return p
}

func (x StorageEngine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageEngine) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[21].Descriptor()
}

func (StorageEngine) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[21]
}

func (x StorageEngine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageEngine.Descriptor instead.
func (StorageEngine) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{21}
}

//*
// @enum
// Enumerates the storage services supported by the Vapus Data Studio system.
type StorageService int32

const (
	StorageService_INVALID_DS_SERVICE   StorageService = 0
	StorageService_RDS                  StorageService = 1
	StorageService_GAR                  StorageService = 2
	StorageService_ECR                  StorageService = 3
	StorageService_AWS_SECRET_MANAGER   StorageService = 4
	StorageService_HASHICORP_VAULT      StorageService = 5
	StorageService_SELF_HOSTED          StorageService = 6
	StorageService_AWS_S3               StorageService = 7
	StorageService_GCP_CLOUD_STORAGE    StorageService = 8
	StorageService_GCP_SECRET_MANAGER   StorageService = 9
	StorageService_AZURE_SECRET_MANAGER StorageService = 10
	StorageService_GCP_CLOUD_SQL        StorageService = 11
)

// Enum value maps for StorageService.
var (
	StorageService_name = map[int32]string{
		0:  "INVALID_DS_SERVICE",
		1:  "RDS",
		2:  "GAR",
		3:  "ECR",
		4:  "AWS_SECRET_MANAGER",
		5:  "HASHICORP_VAULT",
		6:  "SELF_HOSTED",
		7:  "AWS_S3",
		8:  "GCP_CLOUD_STORAGE",
		9:  "GCP_SECRET_MANAGER",
		10: "AZURE_SECRET_MANAGER",
		11: "GCP_CLOUD_SQL",
	}
	StorageService_value = map[string]int32{
		"INVALID_DS_SERVICE":   0,
		"RDS":                  1,
		"GAR":                  2,
		"ECR":                  3,
		"AWS_SECRET_MANAGER":   4,
		"HASHICORP_VAULT":      5,
		"SELF_HOSTED":          6,
		"AWS_S3":               7,
		"GCP_CLOUD_STORAGE":    8,
		"GCP_SECRET_MANAGER":   9,
		"AZURE_SECRET_MANAGER": 10,
		"GCP_CLOUD_SQL":        11,
	}
)

func (x StorageService) Enum() *StorageService {
	p := new(StorageService)
	*p = x
	return p
}

func (x StorageService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageService) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[22].Descriptor()
}

func (StorageService) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[22]
}

func (x StorageService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageService.Descriptor instead.
func (StorageService) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{22}
}

//*
// @enum
// Enumerates the service providers supported by the Vapus Data Studio system.
type ServiceProvider int32

const (
	ServiceProvider_INVALID_SSP         ServiceProvider = 0
	ServiceProvider_SSP_ON_PREM         ServiceProvider = 1
	ServiceProvider_SSP_INTERNAL_HOSTED ServiceProvider = 2
	ServiceProvider_SSP_GCP             ServiceProvider = 3
	ServiceProvider_SSP_AWS             ServiceProvider = 4
	ServiceProvider_SSP_AZURE           ServiceProvider = 5
)

// Enum value maps for ServiceProvider.
var (
	ServiceProvider_name = map[int32]string{
		0: "INVALID_SSP",
		1: "SSP_ON_PREM",
		2: "SSP_INTERNAL_HOSTED",
		3: "SSP_GCP",
		4: "SSP_AWS",
		5: "SSP_AZURE",
	}
	ServiceProvider_value = map[string]int32{
		"INVALID_SSP":         0,
		"SSP_ON_PREM":         1,
		"SSP_INTERNAL_HOSTED": 2,
		"SSP_GCP":             3,
		"SSP_AWS":             4,
		"SSP_AZURE":           5,
	}
)

func (x ServiceProvider) Enum() *ServiceProvider {
	p := new(ServiceProvider)
	*p = x
	return p
}

func (x ServiceProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[23].Descriptor()
}

func (ServiceProvider) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[23]
}

func (x ServiceProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceProvider.Descriptor instead.
func (ServiceProvider) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{23}
}

//*
// @enum
// Enumerates the types of content in data sources.
type DataSourceType int32

const (
	DataSourceType_INVALID_DST   DataSourceType = 0
	DataSourceType_DSDT_DATABASE DataSourceType = 1
	DataSourceType_DSDT_ARTIFACT DataSourceType = 2
	DataSourceType_DSDT_BLOB     DataSourceType = 3
)

// Enum value maps for DataSourceType.
var (
	DataSourceType_name = map[int32]string{
		0: "INVALID_DST",
		1: "DSDT_DATABASE",
		2: "DSDT_ARTIFACT",
		3: "DSDT_BLOB",
	}
	DataSourceType_value = map[string]int32{
		"INVALID_DST":   0,
		"DSDT_DATABASE": 1,
		"DSDT_ARTIFACT": 2,
		"DSDT_BLOB":     3,
	}
)

func (x DataSourceType) Enum() *DataSourceType {
	p := new(DataSourceType)
	*p = x
	return p
}

func (x DataSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[24].Descriptor()
}

func (DataSourceType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[24]
}

func (x DataSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSourceType.Descriptor instead.
func (DataSourceType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{24}
}

//*
// @enum
// Enumerates the types of packages.
type ArtifactTypes int32

const (
	ArtifactTypes_INVALID_PT ArtifactTypes = 0
	ArtifactTypes_PT_OCI     ArtifactTypes = 1
	ArtifactTypes_PT_BLOBS   ArtifactTypes = 2
	ArtifactTypes_PT_MEDIA   ArtifactTypes = 3
)

// Enum value maps for ArtifactTypes.
var (
	ArtifactTypes_name = map[int32]string{
		0: "INVALID_PT",
		1: "PT_OCI",
		2: "PT_BLOBS",
		3: "PT_MEDIA",
	}
	ArtifactTypes_value = map[string]int32{
		"INVALID_PT": 0,
		"PT_OCI":     1,
		"PT_BLOBS":   2,
		"PT_MEDIA":   3,
	}
)

func (x ArtifactTypes) Enum() *ArtifactTypes {
	p := new(ArtifactTypes)
	*p = x
	return p
}

func (x ArtifactTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[25].Descriptor()
}

func (ArtifactTypes) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[25]
}

func (x ArtifactTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactTypes.Descriptor instead.
func (ArtifactTypes) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{25}
}

type LLMServiceProvider int32

const (
	LLMServiceProvider_INVALID_SP   LLMServiceProvider = 0
	LLMServiceProvider_OPENAI       LLMServiceProvider = 1
	LLMServiceProvider_MISTRAL      LLMServiceProvider = 2
	LLMServiceProvider_HUGGING_FACE LLMServiceProvider = 3
	LLMServiceProvider_VAPUS        LLMServiceProvider = 4
	LLMServiceProvider_OLLAMA       LLMServiceProvider = 5
	LLMServiceProvider_AZURE_OPENAI LLMServiceProvider = 6
	LLMServiceProvider_AZURE_PHI    LLMServiceProvider = 7
	LLMServiceProvider_GEMINI       LLMServiceProvider = 8
	LLMServiceProvider_AWS          LLMServiceProvider = 9
	LLMServiceProvider_META         LLMServiceProvider = 10
	LLMServiceProvider_ANTHROPIC    LLMServiceProvider = 11
)

// Enum value maps for LLMServiceProvider.
var (
	LLMServiceProvider_name = map[int32]string{
		0:  "INVALID_SP",
		1:  "OPENAI",
		2:  "MISTRAL",
		3:  "HUGGING_FACE",
		4:  "VAPUS",
		5:  "OLLAMA",
		6:  "AZURE_OPENAI",
		7:  "AZURE_PHI",
		8:  "GEMINI",
		9:  "AWS",
		10: "META",
		11: "ANTHROPIC",
	}
	LLMServiceProvider_value = map[string]int32{
		"INVALID_SP":   0,
		"OPENAI":       1,
		"MISTRAL":      2,
		"HUGGING_FACE": 3,
		"VAPUS":        4,
		"OLLAMA":       5,
		"AZURE_OPENAI": 6,
		"AZURE_PHI":    7,
		"GEMINI":       8,
		"AWS":          9,
		"META":         10,
		"ANTHROPIC":    11,
	}
)

func (x LLMServiceProvider) Enum() *LLMServiceProvider {
	p := new(LLMServiceProvider)
	*p = x
	return p
}

func (x LLMServiceProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLMServiceProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[26].Descriptor()
}

func (LLMServiceProvider) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[26]
}

func (x LLMServiceProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLMServiceProvider.Descriptor instead.
func (LLMServiceProvider) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{26}
}

type LLMQueryType int32

const (
	LLMQueryType_INVALID_EXPECTED_OUTPUT LLMQueryType = 0
	LLMQueryType_GENERAL_TEXT            LLMQueryType = 1
	LLMQueryType_DATA_QUERY              LLMQueryType = 2
	LLMQueryType_GENERATE_SQL            LLMQueryType = 3
)

// Enum value maps for LLMQueryType.
var (
	LLMQueryType_name = map[int32]string{
		0: "INVALID_EXPECTED_OUTPUT",
		1: "GENERAL_TEXT",
		2: "DATA_QUERY",
		3: "GENERATE_SQL",
	}
	LLMQueryType_value = map[string]int32{
		"INVALID_EXPECTED_OUTPUT": 0,
		"GENERAL_TEXT":            1,
		"DATA_QUERY":              2,
		"GENERATE_SQL":            3,
	}
)

func (x LLMQueryType) Enum() *LLMQueryType {
	p := new(LLMQueryType)
	*p = x
	return p
}

func (x LLMQueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LLMQueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[27].Descriptor()
}

func (LLMQueryType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[27]
}

func (x LLMQueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LLMQueryType.Descriptor instead.
func (LLMQueryType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{27}
}

type DataSensitivityClassification int32

const (
	DataSensitivityClassification_PUBLIC       DataSensitivityClassification = 0
	DataSensitivityClassification_PII          DataSensitivityClassification = 1
	DataSensitivityClassification_CONFIDENTIAL DataSensitivityClassification = 2
	DataSensitivityClassification_SENSITIVE    DataSensitivityClassification = 3
	DataSensitivityClassification_EPHII        DataSensitivityClassification = 4
)

// Enum value maps for DataSensitivityClassification.
var (
	DataSensitivityClassification_name = map[int32]string{
		0: "PUBLIC",
		1: "PII",
		2: "CONFIDENTIAL",
		3: "SENSITIVE",
		4: "EPHII",
	}
	DataSensitivityClassification_value = map[string]int32{
		"PUBLIC":       0,
		"PII":          1,
		"CONFIDENTIAL": 2,
		"SENSITIVE":    3,
		"EPHII":        4,
	}
)

func (x DataSensitivityClassification) Enum() *DataSensitivityClassification {
	p := new(DataSensitivityClassification)
	*p = x
	return p
}

func (x DataSensitivityClassification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSensitivityClassification) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[28].Descriptor()
}

func (DataSensitivityClassification) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[28]
}

func (x DataSensitivityClassification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSensitivityClassification.Descriptor instead.
func (DataSensitivityClassification) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{28}
}

type ClassifiedTransformerActions int32

const (
	ClassifiedTransformerActions_REDACT ClassifiedTransformerActions = 0
	ClassifiedTransformerActions_FAKE   ClassifiedTransformerActions = 1
	ClassifiedTransformerActions_DROP   ClassifiedTransformerActions = 2
)

// Enum value maps for ClassifiedTransformerActions.
var (
	ClassifiedTransformerActions_name = map[int32]string{
		0: "REDACT",
		1: "FAKE",
		2: "DROP",
	}
	ClassifiedTransformerActions_value = map[string]int32{
		"REDACT": 0,
		"FAKE":   1,
		"DROP":   2,
	}
)

func (x ClassifiedTransformerActions) Enum() *ClassifiedTransformerActions {
	p := new(ClassifiedTransformerActions)
	*p = x
	return p
}

func (x ClassifiedTransformerActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClassifiedTransformerActions) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[29].Descriptor()
}

func (ClassifiedTransformerActions) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[29]
}

func (x ClassifiedTransformerActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClassifiedTransformerActions.Descriptor instead.
func (ClassifiedTransformerActions) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{29}
}

type VersionBumpType int32

const (
	VersionBumpType_INVALID_BUMP_TYPE VersionBumpType = 0
	VersionBumpType_PATCH             VersionBumpType = 1
	VersionBumpType_MINOR             VersionBumpType = 2
	VersionBumpType_MAJOR             VersionBumpType = 3
)

// Enum value maps for VersionBumpType.
var (
	VersionBumpType_name = map[int32]string{
		0: "INVALID_BUMP_TYPE",
		1: "PATCH",
		2: "MINOR",
		3: "MAJOR",
	}
	VersionBumpType_value = map[string]int32{
		"INVALID_BUMP_TYPE": 0,
		"PATCH":             1,
		"MINOR":             2,
		"MAJOR":             3,
	}
)

func (x VersionBumpType) Enum() *VersionBumpType {
	p := new(VersionBumpType)
	*p = x
	return p
}

func (x VersionBumpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionBumpType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[30].Descriptor()
}

func (VersionBumpType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[30]
}

func (x VersionBumpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionBumpType.Descriptor instead.
func (VersionBumpType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{30}
}

type OrderBys int32

const (
	OrderBys_ASC  OrderBys = 0
	OrderBys_DESC OrderBys = 1
)

// Enum value maps for OrderBys.
var (
	OrderBys_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	OrderBys_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x OrderBys) Enum() *OrderBys {
	p := new(OrderBys)
	*p = x
	return p
}

func (x OrderBys) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderBys) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[31].Descriptor()
}

func (OrderBys) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[31]
}

func (x OrderBys) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderBys.Descriptor instead.
func (OrderBys) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{31}
}

type VapusAiAgentTypes int32

const (
	VapusAiAgentTypes_INVALID_AGENT_TYPE       VapusAiAgentTypes = 0
	VapusAiAgentTypes_EMAILER                  VapusAiAgentTypes = 1
	VapusAiAgentTypes_FILE_UPLOADER            VapusAiAgentTypes = 2
	VapusAiAgentTypes_DATAPRODUCT_QUERY_AGENT  VapusAiAgentTypes = 3
	VapusAiAgentTypes_MESSAGE_POSTER           VapusAiAgentTypes = 4
	VapusAiAgentTypes_CHART_GENERATOR          VapusAiAgentTypes = 5
	VapusAiAgentTypes_CHAT_AGENT               VapusAiAgentTypes = 6
	VapusAiAgentTypes_FILE_GENERATOR           VapusAiAgentTypes = 7
	VapusAiAgentTypes_SYNTHETIC_DATA_GENERATOR VapusAiAgentTypes = 8
)

// Enum value maps for VapusAiAgentTypes.
var (
	VapusAiAgentTypes_name = map[int32]string{
		0: "INVALID_AGENT_TYPE",
		1: "EMAILER",
		2: "FILE_UPLOADER",
		3: "DATAPRODUCT_QUERY_AGENT",
		4: "MESSAGE_POSTER",
		5: "CHART_GENERATOR",
		6: "CHAT_AGENT",
		7: "FILE_GENERATOR",
		8: "SYNTHETIC_DATA_GENERATOR",
	}
	VapusAiAgentTypes_value = map[string]int32{
		"INVALID_AGENT_TYPE":       0,
		"EMAILER":                  1,
		"FILE_UPLOADER":            2,
		"DATAPRODUCT_QUERY_AGENT":  3,
		"MESSAGE_POSTER":           4,
		"CHART_GENERATOR":          5,
		"CHAT_AGENT":               6,
		"FILE_GENERATOR":           7,
		"SYNTHETIC_DATA_GENERATOR": 8,
	}
)

func (x VapusAiAgentTypes) Enum() *VapusAiAgentTypes {
	p := new(VapusAiAgentTypes)
	*p = x
	return p
}

func (x VapusAiAgentTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VapusAiAgentTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[32].Descriptor()
}

func (VapusAiAgentTypes) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[32]
}

func (x VapusAiAgentTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VapusAiAgentTypes.Descriptor instead.
func (VapusAiAgentTypes) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{32}
}

type IntegrationPlugins int32

const (
	IntegrationPlugins_INVALID_PLUGIN IntegrationPlugins = 0
	IntegrationPlugins_SENDGRID       IntegrationPlugins = 1
	IntegrationPlugins_SLACK          IntegrationPlugins = 2
	IntegrationPlugins_JIRA           IntegrationPlugins = 3
	IntegrationPlugins_GMAIL          IntegrationPlugins = 4
	IntegrationPlugins_AMAZON_SES     IntegrationPlugins = 5
	IntegrationPlugins_SALESFORCE     IntegrationPlugins = 6
	IntegrationPlugins_GOOGLE_DRIVE   IntegrationPlugins = 7
)

// Enum value maps for IntegrationPlugins.
var (
	IntegrationPlugins_name = map[int32]string{
		0: "INVALID_PLUGIN",
		1: "SENDGRID",
		2: "SLACK",
		3: "JIRA",
		4: "GMAIL",
		5: "AMAZON_SES",
		6: "SALESFORCE",
		7: "GOOGLE_DRIVE",
	}
	IntegrationPlugins_value = map[string]int32{
		"INVALID_PLUGIN": 0,
		"SENDGRID":       1,
		"SLACK":          2,
		"JIRA":           3,
		"GMAIL":          4,
		"AMAZON_SES":     5,
		"SALESFORCE":     6,
		"GOOGLE_DRIVE":   7,
	}
)

func (x IntegrationPlugins) Enum() *IntegrationPlugins {
	p := new(IntegrationPlugins)
	*p = x
	return p
}

func (x IntegrationPlugins) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntegrationPlugins) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[33].Descriptor()
}

func (IntegrationPlugins) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[33]
}

func (x IntegrationPlugins) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntegrationPlugins.Descriptor instead.
func (IntegrationPlugins) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{33}
}

type IntegrationPluginTypes int32

const (
	IntegrationPluginTypes_INVALID_PLUGIN_TYPE IntegrationPluginTypes = 0
	IntegrationPluginTypes_EMAIL               IntegrationPluginTypes = 1
	IntegrationPluginTypes_SMS                 IntegrationPluginTypes = 2
	IntegrationPluginTypes_MESSAGING           IntegrationPluginTypes = 3
	IntegrationPluginTypes_CODE_REPOSITORY     IntegrationPluginTypes = 4
	IntegrationPluginTypes_FILE_STORE          IntegrationPluginTypes = 5
)

// Enum value maps for IntegrationPluginTypes.
var (
	IntegrationPluginTypes_name = map[int32]string{
		0: "INVALID_PLUGIN_TYPE",
		1: "EMAIL",
		2: "SMS",
		3: "MESSAGING",
		4: "CODE_REPOSITORY",
		5: "FILE_STORE",
	}
	IntegrationPluginTypes_value = map[string]int32{
		"INVALID_PLUGIN_TYPE": 0,
		"EMAIL":               1,
		"SMS":                 2,
		"MESSAGING":           3,
		"CODE_REPOSITORY":     4,
		"FILE_STORE":          5,
	}
)

func (x IntegrationPluginTypes) Enum() *IntegrationPluginTypes {
	p := new(IntegrationPluginTypes)
	*p = x
	return p
}

func (x IntegrationPluginTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntegrationPluginTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[34].Descriptor()
}

func (IntegrationPluginTypes) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[34]
}

func (x IntegrationPluginTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntegrationPluginTypes.Descriptor instead.
func (IntegrationPluginTypes) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{34}
}

type VapusStreamEvents int32

const (
	VapusStreamEvents_INVALID_EVENT VapusStreamEvents = 0
	VapusStreamEvents_START         VapusStreamEvents = 1
	VapusStreamEvents_END           VapusStreamEvents = 2
	VapusStreamEvents_DATA          VapusStreamEvents = 3
	VapusStreamEvents_ABORTED       VapusStreamEvents = 4
	VapusStreamEvents_DATASET_START VapusStreamEvents = 5
	VapusStreamEvents_DATASET_END   VapusStreamEvents = 6
	VapusStreamEvents_STATE         VapusStreamEvents = 7
	VapusStreamEvents_FILE_DATA     VapusStreamEvents = 8
	VapusStreamEvents_RESPONSE_ID   VapusStreamEvents = 9
)

// Enum value maps for VapusStreamEvents.
var (
	VapusStreamEvents_name = map[int32]string{
		0: "INVALID_EVENT",
		1: "START",
		2: "END",
		3: "DATA",
		4: "ABORTED",
		5: "DATASET_START",
		6: "DATASET_END",
		7: "STATE",
		8: "FILE_DATA",
		9: "RESPONSE_ID",
	}
	VapusStreamEvents_value = map[string]int32{
		"INVALID_EVENT": 0,
		"START":         1,
		"END":           2,
		"DATA":          3,
		"ABORTED":       4,
		"DATASET_START": 5,
		"DATASET_END":   6,
		"STATE":         7,
		"FILE_DATA":     8,
		"RESPONSE_ID":   9,
	}
)

func (x VapusStreamEvents) Enum() *VapusStreamEvents {
	p := new(VapusStreamEvents)
	*p = x
	return p
}

func (x VapusStreamEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VapusStreamEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[35].Descriptor()
}

func (VapusStreamEvents) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[35]
}

func (x VapusStreamEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VapusStreamEvents.Descriptor instead.
func (VapusStreamEvents) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{35}
}

type EOSReasons int32

const (
	EOSReasons_SERVER_ERROR   EOSReasons = 0
	EOSReasons_DATA_ERROR     EOSReasons = 1
	EOSReasons_WAIT_TIMEOUT   EOSReasons = 2
	EOSReasons_SUCCESSFULL    EOSReasons = 3
	EOSReasons_EOF            EOSReasons = 4
	EOSReasons_INVALID_PARAMS EOSReasons = 5
	EOSReasons_DONE           EOSReasons = 6
)

// Enum value maps for EOSReasons.
var (
	EOSReasons_name = map[int32]string{
		0: "SERVER_ERROR",
		1: "DATA_ERROR",
		2: "WAIT_TIMEOUT",
		3: "SUCCESSFULL",
		4: "EOF",
		5: "INVALID_PARAMS",
		6: "DONE",
	}
	EOSReasons_value = map[string]int32{
		"SERVER_ERROR":   0,
		"DATA_ERROR":     1,
		"WAIT_TIMEOUT":   2,
		"SUCCESSFULL":    3,
		"EOF":            4,
		"INVALID_PARAMS": 5,
		"DONE":           6,
	}
)

func (x EOSReasons) Enum() *EOSReasons {
	p := new(EOSReasons)
	*p = x
	return p
}

func (x EOSReasons) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOSReasons) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[36].Descriptor()
}

func (EOSReasons) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[36]
}

func (x EOSReasons) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EOSReasons.Descriptor instead.
func (EOSReasons) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{36}
}

type AgentStepEnum int32

const (
	AgentStepEnum_INVALID_STEP_ENUM            AgentStepEnum = 0
	AgentStepEnum_AGENTST_CONTENT_FORMAT       AgentStepEnum = 1
	AgentStepEnum_AGENTST_EMAIL_BODY           AgentStepEnum = 2
	AgentStepEnum_AGENTST_EMAIL_RECIEVER       AgentStepEnum = 3
	AgentStepEnum_AGENTST_EMAIL_SUBJECT        AgentStepEnum = 4
	AgentStepEnum_AGENTST_PDF_FORMAT           AgentStepEnum = 5
	AgentStepEnum_AGENTST_PPT_FORMAT           AgentStepEnum = 6
	AgentStepEnum_AGENTST_RECURRING_JOB_CONFIG AgentStepEnum = 7
	AgentStepEnum_AGENTST_CHART_TYPE           AgentStepEnum = 8
	AgentStepEnum_AGENTST_DATASET              AgentStepEnum = 9
	AgentStepEnum_AGENTST_FILEPATH             AgentStepEnum = 10
	AgentStepEnum_AGENTST_FILENAME             AgentStepEnum = 11
)

// Enum value maps for AgentStepEnum.
var (
	AgentStepEnum_name = map[int32]string{
		0:  "INVALID_STEP_ENUM",
		1:  "AGENTST_CONTENT_FORMAT",
		2:  "AGENTST_EMAIL_BODY",
		3:  "AGENTST_EMAIL_RECIEVER",
		4:  "AGENTST_EMAIL_SUBJECT",
		5:  "AGENTST_PDF_FORMAT",
		6:  "AGENTST_PPT_FORMAT",
		7:  "AGENTST_RECURRING_JOB_CONFIG",
		8:  "AGENTST_CHART_TYPE",
		9:  "AGENTST_DATASET",
		10: "AGENTST_FILEPATH",
		11: "AGENTST_FILENAME",
	}
	AgentStepEnum_value = map[string]int32{
		"INVALID_STEP_ENUM":            0,
		"AGENTST_CONTENT_FORMAT":       1,
		"AGENTST_EMAIL_BODY":           2,
		"AGENTST_EMAIL_RECIEVER":       3,
		"AGENTST_EMAIL_SUBJECT":        4,
		"AGENTST_PDF_FORMAT":           5,
		"AGENTST_PPT_FORMAT":           6,
		"AGENTST_RECURRING_JOB_CONFIG": 7,
		"AGENTST_CHART_TYPE":           8,
		"AGENTST_DATASET":              9,
		"AGENTST_FILEPATH":             10,
		"AGENTST_FILENAME":             11,
	}
)

func (x AgentStepEnum) Enum() *AgentStepEnum {
	p := new(AgentStepEnum)
	*p = x
	return p
}

func (x AgentStepEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStepEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[37].Descriptor()
}

func (AgentStepEnum) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[37]
}

func (x AgentStepEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStepEnum.Descriptor instead.
func (AgentStepEnum) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{37}
}

type EmailSettings int32

const (
	EmailSettings_SENDER_EMAIL EmailSettings = 0
	EmailSettings_SENDER_NAME  EmailSettings = 1
	EmailSettings_BCC_LIST     EmailSettings = 2
	EmailSettings_FOOTER       EmailSettings = 3
)

// Enum value maps for EmailSettings.
var (
	EmailSettings_name = map[int32]string{
		0: "SENDER_EMAIL",
		1: "SENDER_NAME",
		2: "BCC_LIST",
		3: "FOOTER",
	}
	EmailSettings_value = map[string]int32{
		"SENDER_EMAIL": 0,
		"SENDER_NAME":  1,
		"BCC_LIST":     2,
		"FOOTER":       3,
	}
)

func (x EmailSettings) Enum() *EmailSettings {
	p := new(EmailSettings)
	*p = x
	return p
}

func (x EmailSettings) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmailSettings) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[38].Descriptor()
}

func (EmailSettings) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[38]
}

func (x EmailSettings) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmailSettings.Descriptor instead.
func (EmailSettings) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{38}
}

type AIToolCallType int32

const (
	AIToolCallType_INVALID_TOOL_CALL AIToolCallType = 0
	AIToolCallType_FUNCTION          AIToolCallType = 1
)

// Enum value maps for AIToolCallType.
var (
	AIToolCallType_name = map[int32]string{
		0: "INVALID_TOOL_CALL",
		1: "FUNCTION",
	}
	AIToolCallType_value = map[string]int32{
		"INVALID_TOOL_CALL": 0,
		"FUNCTION":          1,
	}
)

func (x AIToolCallType) Enum() *AIToolCallType {
	p := new(AIToolCallType)
	*p = x
	return p
}

func (x AIToolCallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIToolCallType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[39].Descriptor()
}

func (AIToolCallType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[39]
}

func (x AIToolCallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIToolCallType.Descriptor instead.
func (AIToolCallType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{39}
}

type AgentStepValueType int32

const (
	AgentStepValueType_STRING  AgentStepValueType = 0
	AgentStepValueType_OBJECT  AgentStepValueType = 1
	AgentStepValueType_INTEGER AgentStepValueType = 2
	AgentStepValueType_FLOAT   AgentStepValueType = 3
	AgentStepValueType_BOOLEAN AgentStepValueType = 4
	AgentStepValueType_ARRAY   AgentStepValueType = 5
)

// Enum value maps for AgentStepValueType.
var (
	AgentStepValueType_name = map[int32]string{
		0: "STRING",
		1: "OBJECT",
		2: "INTEGER",
		3: "FLOAT",
		4: "BOOLEAN",
		5: "ARRAY",
	}
	AgentStepValueType_value = map[string]int32{
		"STRING":  0,
		"OBJECT":  1,
		"INTEGER": 2,
		"FLOAT":   3,
		"BOOLEAN": 4,
		"ARRAY":   5,
	}
)

func (x AgentStepValueType) Enum() *AgentStepValueType {
	p := new(AgentStepValueType)
	*p = x
	return p
}

func (x AgentStepValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStepValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[40].Descriptor()
}

func (AgentStepValueType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[40]
}

func (x AgentStepValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStepValueType.Descriptor instead.
func (AgentStepValueType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{40}
}

type GuardRailLevels int32

const (
	GuardRailLevels_NONE   GuardRailLevels = 0
	GuardRailLevels_LOW    GuardRailLevels = 1
	GuardRailLevels_MEDIUM GuardRailLevels = 2
	GuardRailLevels_HIGH   GuardRailLevels = 3
)

// Enum value maps for GuardRailLevels.
var (
	GuardRailLevels_name = map[int32]string{
		0: "NONE",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
	}
	GuardRailLevels_value = map[string]int32{
		"NONE":   0,
		"LOW":    1,
		"MEDIUM": 2,
		"HIGH":   3,
	}
)

func (x GuardRailLevels) Enum() *GuardRailLevels {
	p := new(GuardRailLevels)
	*p = x
	return p
}

func (x GuardRailLevels) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GuardRailLevels) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[41].Descriptor()
}

func (GuardRailLevels) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[41]
}

func (x GuardRailLevels) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GuardRailLevels.Descriptor instead.
func (GuardRailLevels) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{41}
}

type InfraService int32

const (
	InfraService_INVALID_INFRA InfraService = 0
	InfraService_GKE           InfraService = 1
	InfraService_EKS           InfraService = 2
	InfraService_AKS           InfraService = 3
)

// Enum value maps for InfraService.
var (
	InfraService_name = map[int32]string{
		0: "INVALID_INFRA",
		1: "GKE",
		2: "EKS",
		3: "AKS",
	}
	InfraService_value = map[string]int32{
		"INVALID_INFRA": 0,
		"GKE":           1,
		"EKS":           2,
		"AKS":           3,
	}
)

func (x InfraService) Enum() *InfraService {
	p := new(InfraService)
	*p = x
	return p
}

func (x InfraService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InfraService) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[42].Descriptor()
}

func (InfraService) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[42]
}

func (x InfraService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InfraService.Descriptor instead.
func (InfraService) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{42}
}

var File_protos_models_v1alpha1_enums_proto protoreflect.FileDescriptor

var file_protos_models_v1alpha1_enums_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2a, 0x41, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x47, 0x5f, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x09, 0x56, 0x61, 0x70, 0x75,
	0x73, 0x53, 0x76, 0x63, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x49, 0x53, 0x54, 0x55, 0x44, 0x49,
	0x4f, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x42, 0x41, 0x50, 0x50, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4d, 0x4c, 0x55, 0x54, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x02, 0x2a, 0x36,
	0x0a, 0x11, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x5f,
	0x4f, 0x52, 0x47, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x4f, 0x52, 0x47, 0x10, 0x01, 0x2a, 0x80, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x4d, 0x41, 0x52, 0x4b,
	0x45, 0x54, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x54,
	0x41, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41,
	0x54, 0x41, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x44, 0x41, 0x54, 0x41, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x49, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x49, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x53, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x49, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x06, 0x2a, 0x51, 0x0a, 0x10, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x54, 0x5f, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x2a, 0x2f, 0x0a, 0x09,
	0x48, 0x61, 0x73, 0x68, 0x41, 0x6c, 0x67, 0x6f, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x41, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x01, 0x2a, 0x7e, 0x0a,
	0x08, 0x4c, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55,
	0x4e, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x06, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45,
	0x54, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x09, 0x2a, 0x31, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x0a,
	0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4f, 0x49, 0x44, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x44, 0x41, 0x50, 0x10, 0x02,
	0x2a, 0x84, 0x01, 0x0a, 0x0b, 0x54, 0x74, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x54, 0x4c, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x54, 0x4c, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x54, 0x4c, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45,
	0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x4c, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x54, 0x4c, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x54, 0x4c, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x53, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x54, 0x4c, 0x5f, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x53, 0x10, 0x06, 0x2a, 0x53, 0x0a, 0x09, 0x54, 0x54, 0x4c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x54, 0x54, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x54, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x54,
	0x4c, 0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x54, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x0f,
	0x0a, 0x0b, 0x4a, 0x53, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x44, 0x32, 0x35, 0x35, 0x31, 0x39, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x43, 0x44, 0x53, 0x41, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x41, 0x10, 0x03,
	0x2a, 0x2c, 0x0a, 0x12, 0x42, 0x45, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x52, 0x49, 0x54, 0x45, 0x52, 0x10, 0x01, 0x2a, 0xf1,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x0a,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x0c, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x10, 0x0d,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x10, 0x0e, 0x2a, 0x83, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x4d,
	0x4c, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53, 0x56, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x44, 0x46, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x07,
	0x0a, 0x03, 0x4a, 0x50, 0x47, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x50, 0x45, 0x47, 0x10,
	0x08, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x10, 0x09, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x0a, 0x2a, 0x30, 0x0a, 0x07, 0x54, 0x6c, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x4c, 0x53, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x54, 0x4c, 0x53, 0x10, 0x02, 0x2a, 0x8e, 0x03, 0x0a, 0x0e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x16, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41,
	0x50, 0x55, 0x53, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x53, 0x10,
	0x03, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x41, 0x50, 0x55,
	0x53, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x52, 0x45,
	0x44, 0x53, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x44, 0x4f,
	0x4d, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x56, 0x41, 0x50, 0x55, 0x53,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f,
	0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x07, 0x12, 0x17, 0x0a,
	0x13, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x49, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x53, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10,
	0x09, 0x12, 0x21, 0x0a, 0x1d, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x53, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x41, 0x50, 0x55, 0x53,
	0x5f, 0x41, 0x49, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x53, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e,
	0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x49, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x0d,
	0x12, 0x11, 0x0a, 0x0d, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e,
	0x53, 0x10, 0x0e, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x41, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x49, 0x47,
	0x55, 0x41, 0x52, 0x44, 0x52, 0x41, 0x49, 0x4c, 0x53, 0x10, 0x0f, 0x2a, 0x31, 0x0a, 0x0c, 0x41,
	0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x41, 0x53, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x45, 0x41, 0x52, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x50, 0x49, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x2a, 0x6e,
	0x0a, 0x09, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x59,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4d,
	0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x53, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x07, 0x2a, 0x66,
	0x0a, 0x13, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x53, 0x54, 0x5f, 0x53, 0x45,
	0x43, 0x52, 0x45, 0x54, 0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x53, 0x54, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x53, 0x54, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46,
	0x41, 0x43, 0x54, 0x53, 0x10, 0x04, 0x2a, 0x6e, 0x0a, 0x18, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x53, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x53, 0x4f, 0x5f, 0x49, 0x4e, 0x42, 0x55, 0x49,
	0x4c, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x45, 0x5f, 0x42, 0x59, 0x4f, 0x53, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x45, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x03, 0x12,
	0x15, 0x0a, 0x11, 0x42, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x54,
	0x55, 0x44, 0x49, 0x4f, 0x10, 0x04, 0x2a, 0xbb, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x53, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x53, 0x53, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52,
	0x45, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x53, 0x53, 0x5f, 0x48, 0x43, 0x5f, 0x56,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x53, 0x53, 0x5f, 0x41, 0x57,
	0x53, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x53, 0x53, 0x5f, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x33,
	0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x53, 0x53, 0x5f, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x42,
	0x53, 0x53, 0x5f, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x53, 0x53, 0x5f, 0x4f,
	0x43, 0x49, 0x10, 0x07, 0x2a, 0x99, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x41, 0x53, 0x48, 0x49, 0x43, 0x4f, 0x52, 0x50, 0x56,
	0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52,
	0x45, 0x53, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x43, 0x49, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x10,
	0x05, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x57, 0x53, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x06,
	0x12, 0x0d, 0x0a, 0x09, 0x47, 0x43, 0x50, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x07, 0x12,
	0x0f, 0x0a, 0x0b, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x08,
	0x2a, 0xe9, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44,
	0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x52,
	0x44, 0x53, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41, 0x52, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x45, 0x43, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x45,
	0x43, 0x52, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x48, 0x41, 0x53, 0x48, 0x49, 0x43, 0x4f, 0x52, 0x50, 0x5f, 0x56, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53, 0x54,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x33, 0x10, 0x07,
	0x12, 0x15, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x09, 0x12,
	0x18, 0x0a, 0x14, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f,
	0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x43, 0x50,
	0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x53, 0x51, 0x4c, 0x10, 0x0b, 0x2a, 0x75, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x53, 0x50, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x53, 0x50, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45, 0x4d, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x53, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x53,
	0x50, 0x5f, 0x47, 0x43, 0x50, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x53, 0x50, 0x5f, 0x41,
	0x57, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x53, 0x50, 0x5f, 0x41, 0x5a, 0x55, 0x52,
	0x45, 0x10, 0x05, 0x2a, 0x56, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x44, 0x53, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x53, 0x44, 0x54, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x53, 0x44,
	0x54, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x46, 0x41, 0x43, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x53, 0x44, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x03, 0x2a, 0x47, 0x0a, 0x0d, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x54, 0x5f, 0x4f, 0x43, 0x49, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x54, 0x5f, 0x42,
	0x4c, 0x4f, 0x42, 0x53, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x54, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x10, 0x03, 0x2a, 0xb5, 0x01, 0x0a, 0x12, 0x4c, 0x4c, 0x4d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f,
	0x50, 0x45, 0x4e, 0x41, 0x49, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x53, 0x54, 0x52,
	0x41, 0x4c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x55, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f,
	0x46, 0x41, 0x43, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x41, 0x50, 0x55, 0x53, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4c, 0x4c, 0x41, 0x4d, 0x41, 0x10, 0x05, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x41, 0x49, 0x10, 0x06, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x48, 0x49, 0x10, 0x07, 0x12, 0x0a,
	0x0a, 0x06, 0x47, 0x45, 0x4d, 0x49, 0x4e, 0x49, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57,
	0x53, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x45, 0x54, 0x41, 0x10, 0x0a, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x4e, 0x54, 0x48, 0x52, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x0b, 0x2a, 0x5f, 0x0a, 0x0c,
	0x4c, 0x4c, 0x4d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x4c, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x51, 0x4c, 0x10, 0x03, 0x2a, 0x60, 0x0a,
	0x1d, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a,
	0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x49,
	0x49, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x4e, 0x53, 0x49, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x50, 0x48, 0x49, 0x49, 0x10, 0x04, 0x2a,
	0x3e, 0x0a, 0x1c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x45, 0x44, 0x41, 0x43, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x41, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x02, 0x2a,
	0x49, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x6d, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x42, 0x55,
	0x4d, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x1d, 0x0a, 0x08, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x2a, 0xd3, 0x01, 0x0a, 0x11, 0x56, 0x61,
	0x70, 0x75, 0x73, 0x41, 0x69, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x41, 0x54, 0x41, 0x50,
	0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x41, 0x47, 0x45,
	0x4e, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x4f, 0x53, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48, 0x41, 0x52,
	0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x12, 0x0a,
	0x0e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10,
	0x07, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x59, 0x4e, 0x54, 0x48, 0x45, 0x54, 0x49, 0x43, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x08, 0x2a,
	0x88, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45,
	0x4e, 0x44, 0x47, 0x52, 0x49, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x41, 0x43,
	0x4b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x49, 0x52, 0x41, 0x10, 0x03, 0x12, 0x09, 0x0a,
	0x05, 0x47, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x4d, 0x41, 0x5a,
	0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x53, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x41, 0x4c, 0x45,
	0x53, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x4f, 0x4f, 0x47,
	0x4c, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x10, 0x07, 0x2a, 0x79, 0x0a, 0x16, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4d, 0x53, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54,
	0x4f, 0x52, 0x59, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x10, 0x05, 0x2a, 0xa0, 0x01, 0x0a, 0x11, 0x56, 0x61, 0x70, 0x75, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e, 0x44,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x41, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54,
	0x41, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x09, 0x2a, 0x78, 0x0a, 0x0a, 0x45, 0x4f, 0x53, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x41, 0x49, 0x54,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x45,
	0x4f, 0x46, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45,
	0x10, 0x06, 0x2a, 0xbc, 0x02, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x53, 0x54, 0x45, 0x50, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x47, 0x45, 0x4e, 0x54,
	0x53, 0x54, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53, 0x54, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x52, 0x45, 0x43, 0x49, 0x45, 0x56, 0x45, 0x52, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x53, 0x54, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x55, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53,
	0x54, 0x5f, 0x50, 0x44, 0x46, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x05, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53, 0x54, 0x5f, 0x50, 0x50, 0x54, 0x5f, 0x46, 0x4f,
	0x52, 0x4d, 0x41, 0x54, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53,
	0x54, 0x5f, 0x52, 0x45, 0x43, 0x55, 0x52, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4a, 0x4f, 0x42, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x53, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x08,
	0x12, 0x13, 0x0a, 0x0f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x53, 0x45, 0x54, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x53, 0x54,
	0x5f, 0x46, 0x49, 0x4c, 0x45, 0x50, 0x41, 0x54, 0x48, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x0b, 0x2a, 0x4c, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x4d, 0x41,
	0x49, 0x4c, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x43, 0x43, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x4f, 0x54, 0x45, 0x52, 0x10, 0x03, 0x2a,
	0x35, 0x0a, 0x0e, 0x41, 0x49, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4f,
	0x4c, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4e, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x2a, 0x5c, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x52,
	0x41, 0x59, 0x10, 0x05, 0x2a, 0x3a, 0x0a, 0x0f, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69,
	0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45,
	0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03,
	0x2a, 0x3c, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x52,
	0x41, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x4b, 0x53, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4b, 0x53, 0x10, 0x03, 0x42, 0xb4,
	0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x6f, 0x73, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58,
	0xaa, 0x02, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xca, 0x02, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x10, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_models_v1alpha1_enums_proto_rawDescOnce sync.Once
	file_protos_models_v1alpha1_enums_proto_rawDescData = file_protos_models_v1alpha1_enums_proto_rawDesc
)

func file_protos_models_v1alpha1_enums_proto_rawDescGZIP() []byte {
	file_protos_models_v1alpha1_enums_proto_rawDescOnce.Do(func() {
		file_protos_models_v1alpha1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_models_v1alpha1_enums_proto_rawDescData)
	})
	return file_protos_models_v1alpha1_enums_proto_rawDescData
}

var file_protos_models_v1alpha1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 43)
var file_protos_models_v1alpha1_enums_proto_goTypes = []any{
	(ResourceScope)(0),                 // 0: models.v1alpha1.ResourceScope
	(VapusSvcs)(0),                     // 1: models.v1alpha1.VapusSvcs
	(OrganizationTypes)(0),             // 2: models.v1alpha1.OrganizationTypes
	(Resources)(0),                     // 3: models.v1alpha1.Resources
	(AccessTokenScope)(0),              // 4: models.v1alpha1.AccessTokenScope
	(HashAlgos)(0),                     // 5: models.v1alpha1.HashAlgos
	(LcAction)(0),                      // 6: models.v1alpha1.LcAction
	(AuthnMethod)(0),                   // 7: models.v1alpha1.AuthnMethod
	(TtlDuration)(0),                   // 8: models.v1alpha1.TtlDuration
	(TTLStatus)(0),                     // 9: models.v1alpha1.TTLStatus
	(EncryptionAlgo)(0),                // 10: models.v1alpha1.EncryptionAlgo
	(BEStoreAccessScope)(0),            // 11: models.v1alpha1.BEStoreAccessScope
	(CommonStatus)(0),                  // 12: models.v1alpha1.CommonStatus
	(ContentFormats)(0),                // 13: models.v1alpha1.ContentFormats
	(TlsType)(0),                       // 14: models.v1alpha1.TlsType
	(RequestObjects)(0),                // 15: models.v1alpha1.RequestObjects
	(ApiTokenType)(0),                  // 16: models.v1alpha1.ApiTokenType
	(Frequency)(0),                     // 17: models.v1alpha1.Frequency
	(BackendStorageTypes)(0),           // 18: models.v1alpha1.BackendStorageTypes
	(BackendStorageOnboarding)(0),      // 19: models.v1alpha1.BackendStorageOnboarding
	(BackendStorageServices)(0),        // 20: models.v1alpha1.BackendStorageServices
	(StorageEngine)(0),                 // 21: models.v1alpha1.StorageEngine
	(StorageService)(0),                // 22: models.v1alpha1.StorageService
	(ServiceProvider)(0),               // 23: models.v1alpha1.ServiceProvider
	(DataSourceType)(0),                // 24: models.v1alpha1.DataSourceType
	(ArtifactTypes)(0),                 // 25: models.v1alpha1.ArtifactTypes
	(LLMServiceProvider)(0),            // 26: models.v1alpha1.LLMServiceProvider
	(LLMQueryType)(0),                  // 27: models.v1alpha1.LLMQueryType
	(DataSensitivityClassification)(0), // 28: models.v1alpha1.DataSensitivityClassification
	(ClassifiedTransformerActions)(0),  // 29: models.v1alpha1.ClassifiedTransformerActions
	(VersionBumpType)(0),               // 30: models.v1alpha1.VersionBumpType
	(OrderBys)(0),                      // 31: models.v1alpha1.OrderBys
	(VapusAiAgentTypes)(0),             // 32: models.v1alpha1.VapusAiAgentTypes
	(IntegrationPlugins)(0),            // 33: models.v1alpha1.IntegrationPlugins
	(IntegrationPluginTypes)(0),        // 34: models.v1alpha1.IntegrationPluginTypes
	(VapusStreamEvents)(0),             // 35: models.v1alpha1.VapusStreamEvents
	(EOSReasons)(0),                    // 36: models.v1alpha1.EOSReasons
	(AgentStepEnum)(0),                 // 37: models.v1alpha1.AgentStepEnum
	(EmailSettings)(0),                 // 38: models.v1alpha1.EmailSettings
	(AIToolCallType)(0),                // 39: models.v1alpha1.AIToolCallType
	(AgentStepValueType)(0),            // 40: models.v1alpha1.AgentStepValueType
	(GuardRailLevels)(0),               // 41: models.v1alpha1.GuardRailLevels
	(InfraService)(0),                  // 42: models.v1alpha1.InfraService
}
var file_protos_models_v1alpha1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_models_v1alpha1_enums_proto_init() }
func file_protos_models_v1alpha1_enums_proto_init() {
	if File_protos_models_v1alpha1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_models_v1alpha1_enums_proto_rawDesc,
			NumEnums:      43,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_models_v1alpha1_enums_proto_goTypes,
		DependencyIndexes: file_protos_models_v1alpha1_enums_proto_depIdxs,
		EnumInfos:         file_protos_models_v1alpha1_enums_proto_enumTypes,
	}.Build()
	File_protos_models_v1alpha1_enums_proto = out.File
	file_protos_models_v1alpha1_enums_proto_rawDesc = nil
	file_protos_models_v1alpha1_enums_proto_goTypes = nil
	file_protos_models_v1alpha1_enums_proto_depIdxs = nil
}
