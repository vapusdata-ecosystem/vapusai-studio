# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos.vapus_aiutilities.v1alpha1 import vapus_aiutilities_pb2 as protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2


class AIUtilityStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateEmbedding = channel.unary_unary(
                '/vapusdata.ai_studio.v1alpha1.AIUtility/GenerateEmbedding',
                request_serializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.GenerateEmbeddingRequest.SerializeToString,
                response_deserializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.GenerateEmbeddingResponse.FromString,
                _registered_method=True)
        self.SensitivityAnalyzer = channel.unary_unary(
                '/vapusdata.ai_studio.v1alpha1.AIUtility/SensitivityAnalyzer',
                request_serializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.SensitivityAnalyzerRequest.SerializeToString,
                response_deserializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.SensitivityAnalyzerResponse.FromString,
                _registered_method=True)


class AIUtilityServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateEmbedding(self, request, context):
        """*
        Generates Vector Embeddings for the given text.
        @param {GenerateEmbeddingRequest} request - The request object containing the query parameters.
        @returns {GenerateEmbeddingResponse} The response object containing the query results.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SensitivityAnalyzer(self, request, context):
        """*
        Analyzed and acts on the given text.
        @param {SensitivityAnalyzerRequest} request - The request object containing the query parameters.
        @returns {SensitivityAnalyzerResponse} The response object containing the query results.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AIUtilityServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateEmbedding': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateEmbedding,
                    request_deserializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.GenerateEmbeddingRequest.FromString,
                    response_serializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.GenerateEmbeddingResponse.SerializeToString,
            ),
            'SensitivityAnalyzer': grpc.unary_unary_rpc_method_handler(
                    servicer.SensitivityAnalyzer,
                    request_deserializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.SensitivityAnalyzerRequest.FromString,
                    response_serializer=protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.SensitivityAnalyzerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vapusdata.ai_studio.v1alpha1.AIUtility', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vapusdata.ai_studio.v1alpha1.AIUtility', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AIUtility(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateEmbedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusdata.ai_studio.v1alpha1.AIUtility/GenerateEmbedding',
            protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.GenerateEmbeddingRequest.SerializeToString,
            protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.GenerateEmbeddingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SensitivityAnalyzer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusdata.ai_studio.v1alpha1.AIUtility/SensitivityAnalyzer',
            protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.SensitivityAnalyzerRequest.SerializeToString,
            protos_dot_vapus__aiutilities_dot_v1alpha1_dot_vapus__aiutilities__pb2.SensitivityAnalyzerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
