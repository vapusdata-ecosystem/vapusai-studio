# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos.models.v1alpha1 import common_pb2 as protos_dot_models_dot_v1alpha1_dot_common__pb2
from protos.vapusai_studio.v1alpha1 import organization_pb2 as protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2


class StudioServiceStub(object):
    """*
    The StudioService is the main service interface for managing vapusai services.
    It provides methods for creating accounts, retrieving account information,
    creating data marketplacees, storing data marketplace secrets, and retrieving data marketplace information.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StudioPublicInfo = channel.unary_unary(
                '/vapusai.v1alpha1.StudioService/StudioPublicInfo',
                request_serializer=protos_dot_models_dot_v1alpha1_dot_common__pb2.EmptyRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StudioPublicInfoResponse.FromString,
                _registered_method=True)
        self.OrganizationManager = channel.unary_unary(
                '/vapusai.v1alpha1.StudioService/OrganizationManager',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationManagerRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationResponse.FromString,
                _registered_method=True)
        self.OrganizationGetter = channel.unary_unary(
                '/vapusai.v1alpha1.StudioService/OrganizationGetter',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationGetterRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationResponse.FromString,
                _registered_method=True)
        self.AccountGetter = channel.unary_unary(
                '/vapusai.v1alpha1.StudioService/AccountGetter',
                request_serializer=protos_dot_models_dot_v1alpha1_dot_common__pb2.EmptyRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountResponse.FromString,
                _registered_method=True)
        self.AccountManager = channel.unary_unary(
                '/vapusai.v1alpha1.StudioService/AccountManager',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountManagerRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountResponse.FromString,
                _registered_method=True)


class StudioServiceServicer(object):
    """*
    The StudioService is the main service interface for managing vapusai services.
    It provides methods for creating accounts, retrieving account information,
    creating data marketplacees, storing data marketplace secrets, and retrieving data marketplace information.
    """

    def StudioPublicInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrganizationManager(self, request, context):
        """*
        Manages a org.
        @param {OrganizationManagerRequest} request - The request object containing the org details.
        @returns {OrganizationResponse} The response object containing the result of the org management actions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrganizationGetter(self, request, context):
        """*
        Retrieves a org.
        @param {OrganizationGetterRequest} request - The request object containing the org ID.
        @returns {OrganizationResponse} The response object containing the retrieved org.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountGetter(self, request, context):
        """*
        Retrieves information about theaccount.
        @param {AccountManager} request - The account creation request.
        @returns {AccountResponse} - The account creation response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountManager(self, request, context):
        """*
        Creates a new account with the specified name.
        @param {AccountManager} request - The account creation request.
        @returns {AccountResponse} - The account creation response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudioServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StudioPublicInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.StudioPublicInfo,
                    request_deserializer=protos_dot_models_dot_v1alpha1_dot_common__pb2.EmptyRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StudioPublicInfoResponse.SerializeToString,
            ),
            'OrganizationManager': grpc.unary_unary_rpc_method_handler(
                    servicer.OrganizationManager,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationManagerRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationResponse.SerializeToString,
            ),
            'OrganizationGetter': grpc.unary_unary_rpc_method_handler(
                    servicer.OrganizationGetter,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationGetterRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationResponse.SerializeToString,
            ),
            'AccountGetter': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountGetter,
                    request_deserializer=protos_dot_models_dot_v1alpha1_dot_common__pb2.EmptyRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountResponse.SerializeToString,
            ),
            'AccountManager': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountManager,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountManagerRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vapusai.v1alpha1.StudioService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vapusai.v1alpha1.StudioService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StudioService(object):
    """*
    The StudioService is the main service interface for managing vapusai services.
    It provides methods for creating accounts, retrieving account information,
    creating data marketplacees, storing data marketplace secrets, and retrieving data marketplace information.
    """

    @staticmethod
    def StudioPublicInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.StudioService/StudioPublicInfo',
            protos_dot_models_dot_v1alpha1_dot_common__pb2.EmptyRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StudioPublicInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OrganizationManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.StudioService/OrganizationManager',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationManagerRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OrganizationGetter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.StudioService/OrganizationGetter',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationGetterRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.OrganizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccountGetter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.StudioService/AccountGetter',
            protos_dot_models_dot_v1alpha1_dot_common__pb2.EmptyRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AccountManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.StudioService/AccountManager',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountManagerRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.AccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class UtilityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreDMSecrets = channel.unary_unary(
                '/vapusai.v1alpha1.UtilityService/StoreDMSecrets',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StoreDMSecretsRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StoreDMSecretsResponse.FromString,
                _registered_method=True)
        self.Upload = channel.unary_unary(
                '/vapusai.v1alpha1.UtilityService/Upload',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadResponse.FromString,
                _registered_method=True)
        self.UploadStream = channel.stream_unary(
                '/vapusai.v1alpha1.UtilityService/UploadStream',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadResponse.FromString,
                _registered_method=True)


class UtilityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StoreDMSecrets(self, request, context):
        """*
        Stores the specified data marketplace secrets.
        @param {StoreDMSecretsRequest} request - The data marketplace secrets storage request.
        @returns {StoreDMSecretsResponse} - The data marketplace secrets storage response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Upload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UtilityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreDMSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreDMSecrets,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StoreDMSecretsRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StoreDMSecretsResponse.SerializeToString,
            ),
            'Upload': grpc.unary_unary_rpc_method_handler(
                    servicer.Upload,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadResponse.SerializeToString,
            ),
            'UploadStream': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadStream,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vapusai.v1alpha1.UtilityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vapusai.v1alpha1.UtilityService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UtilityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StoreDMSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.UtilityService/StoreDMSecrets',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StoreDMSecretsRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.StoreDMSecretsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Upload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.UtilityService/Upload',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/vapusai.v1alpha1.UtilityService/UploadStream',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.UploadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PluginServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PluginManager = channel.unary_unary(
                '/vapusai.v1alpha1.PluginService/PluginManager',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginManagerRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginResponse.FromString,
                _registered_method=True)
        self.PluginGetter = channel.unary_unary(
                '/vapusai.v1alpha1.PluginService/PluginGetter',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginGetterRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginResponse.FromString,
                _registered_method=True)
        self.PluginAction = channel.unary_unary(
                '/vapusai.v1alpha1.PluginService/PluginAction',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginActionRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginActionResponse.FromString,
                _registered_method=True)


class PluginServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PluginManager(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PluginGetter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PluginAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PluginServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PluginManager': grpc.unary_unary_rpc_method_handler(
                    servicer.PluginManager,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginManagerRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginResponse.SerializeToString,
            ),
            'PluginGetter': grpc.unary_unary_rpc_method_handler(
                    servicer.PluginGetter,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginGetterRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginResponse.SerializeToString,
            ),
            'PluginAction': grpc.unary_unary_rpc_method_handler(
                    servicer.PluginAction,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginActionRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginActionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vapusai.v1alpha1.PluginService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vapusai.v1alpha1.PluginService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PluginService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PluginManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.PluginService/PluginManager',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginManagerRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PluginGetter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.PluginService/PluginGetter',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginGetterRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PluginAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.PluginService/PluginAction',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginActionRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_organization__pb2.PluginActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
