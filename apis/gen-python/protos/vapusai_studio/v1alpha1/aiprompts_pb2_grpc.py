# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos.vapusai_studio.v1alpha1 import aiprompts_pb2 as protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2


class AIPromptsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Manager = channel.unary_unary(
                '/vapusai.v1alpha1.AIPrompts/Manager',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptManagerRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptResponse.FromString,
                _registered_method=True)
        self.Getter = channel.unary_unary(
                '/vapusai.v1alpha1.AIPrompts/Getter',
                request_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptGetterRequest.SerializeToString,
                response_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptResponse.FromString,
                _registered_method=True)


class AIPromptsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Manager(self, request, context):
        """Creates a new prompt.
        @param {PromptManagerRequest} request - The request object containing the prompt manager.
        @returns {PromptResponse} The response object containing the created prompt.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Getter(self, request, context):
        """Retrieves a prompt.
        @param {PromptGetterRequest} request - The request object containing the prompt getter.
        @returns {PromptResponse} The response object containing the retrieved prompt.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AIPromptsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Manager': grpc.unary_unary_rpc_method_handler(
                    servicer.Manager,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptManagerRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptResponse.SerializeToString,
            ),
            'Getter': grpc.unary_unary_rpc_method_handler(
                    servicer.Getter,
                    request_deserializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptGetterRequest.FromString,
                    response_serializer=protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vapusai.v1alpha1.AIPrompts', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vapusai.v1alpha1.AIPrompts', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AIPrompts(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Manager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.AIPrompts/Manager',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptManagerRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Getter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vapusai.v1alpha1.AIPrompts/Getter',
            protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptGetterRequest.SerializeToString,
            protos_dot_vapusai__studio_dot_v1alpha1_dot_aiprompts__pb2.PromptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
